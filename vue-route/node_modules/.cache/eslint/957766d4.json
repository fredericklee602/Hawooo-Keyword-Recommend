[{"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\main.js":"1","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\App.vue":"2","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\router\\index.js":"3","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\HomeView.vue":"4","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue":"5","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\UpdateVectorDB.vue":"6","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AITrain.vue":"7","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\components\\WebsiteDescription.vue":"8","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\components\\RecommendationKeywords.vue":"9"},{"size":137,"mtime":1694054064023,"results":"10","hashOfConfig":"11"},{"size":740,"mtime":1694762893240,"results":"12","hashOfConfig":"11"},{"size":1587,"mtime":1694748823960,"results":"13","hashOfConfig":"11"},{"size":555,"mtime":1694057740660,"results":"14","hashOfConfig":"11"},{"size":11899,"mtime":1695024967519,"results":"15","hashOfConfig":"11"},{"size":12688,"mtime":1695005880552,"results":"16","hashOfConfig":"11"},{"size":9635,"mtime":1695021287356,"results":"17","hashOfConfig":"11"},{"size":2028,"mtime":1694748874378,"results":"18","hashOfConfig":"11"},{"size":2773,"mtime":1695021779311,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18p15n1",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\main.js",[],"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\App.vue",[],"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\router\\index.js",[],"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\HomeView.vue",[],"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue",["42","43","44","45"],"<template>\r\n    <div class=\"pipline\">\r\n    <!-- 加載指示器 -->\r\n    <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n      <img src=\"/jumpingsheep.gif\" alt=\"上傳中...\" class=\"loading-image\"/>\r\n    </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step1：自訂或點擊關鍵字</h3>\r\n      <div>\r\n        <input v-model=\"input_text\" placeholder=\"自訂關鍵字\" @keyup.enter=\"showRecommendations(input_text)\" />\r\n        <button @click=\"showRecommendations(input_text)\">送出</button>\r\n      </div>\r\n\r\n      <div class=\"radiobutton\">\r\n        <div>\r\n          <label>\r\n            <input type=\"radio\" value=\"lastKeywords\" v-model=\"radioselectedOption\" @change=\"KeywordsData\"/> 剛上傳關鍵字\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <input type=\"radio\" value=\"VectorDBKeywords\" v-model=\"radioselectedOption\" @change=\"KeywordsData\"/> 向量資料庫關鍵字\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <table class=\"step1-table\">\r\n        <thead>\r\n          <tr>\r\n              <th>序號</th>\r\n              <th>關鍵字集合</th>\r\n              <th v-if=\"radioselectedOption=='VectorDBKeywords'\" >刪除</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"keyword in paginatedKeywords[currentPage]\" :key=\"keyword\">\r\n            <td >{{ keyword.index + 1}}</td>\r\n            <td class=\"clickable\" @click=\"showRecommendations(keyword.Keywords)\">{{ keyword.Keywords }}</td>\r\n            <td v-if=\"radioselectedOption=='VectorDBKeywords'\" ><button @click=\"removeKeyword(keyword.Keywords)\">Delete</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"PageControl\">\r\n        <button id=\"prevPage1\" @click=\"prevPage($event)\">上一頁</button>\r\n        <input id=\"pagenumber1\" class=\"pagenumber\" type=\"number\" v-model.number=\"inputPage\" @change=\"goToPage\" />\r\n        /{{ totalPages }}\r\n        <button id=\"nextPage1\" @click=\"nextPage($event)\">下一頁</button>\r\n      </div>\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step2：選取多個同義詞，並提交同義詞庫</h3>\r\n      <RecommendationKeywords @update-value=\"removeRecommandKeyword\" class=\"step2-table\" v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" :recommendKeywords_list=\"recommendKeywords_list\" />\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step3：同義詞庫</h3>\r\n     <table class=\"step3-table\">\r\n        <thead>\r\n            <tr>\r\n              <th>關鍵字</th>\r\n              <th>同義詞</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"synonyms in synonyms_list\" :key=\"synonyms\">\r\n            <td >{{ synonyms.keyword }}</td>\r\n            <td >{{ synonyms.similarity_keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"PageControl\">\r\n        <button id=\"prevPage2\" @click=\"prevPage($event)\">上一頁</button>\r\n        <input id=\"pagenumber2\" class=\"pagenumber\" type=\"number\" v-model.number=\"inputPage2\" @change=\"goToPage\" />\r\n        /{{ totalPages2 }}\r\n        <button id=\"nextPage2\" @click=\"nextPage($event)\">下一頁</button>\r\n      </div>\r\n      <button class=\"submit-button\" @click=\"synonymsData\" >更新顯示同義詞庫</button>\r\n     </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\r\nexport default {\r\n    components: {\r\n      RecommendationKeywords\r\n    },\r\n    async created(){\r\n      await this.KeywordsData(),\r\n      await this.synonymsData()\r\n    },\r\n    data() {\r\n      return {\r\n        isLoading: false,  // 默認為false\r\n        radioselectedOption:'lastKeywords',\r\n        input_text:'',\r\n        keywords: [],\r\n        lastkeywords: [],\r\n        VDBkeywords:[],\r\n        currentPage: 0,\r\n        currentPage2: 0,\r\n        selectedKeyword: '',\r\n        showRecommendationsTable: false,\r\n        recommendKeywords_list: [],\r\n        synonyms_list:[],\r\n        inputPage: 1,\r\n        inputPage2: 1\r\n      }\r\n    },\r\n    computed: {\r\n      paginatedKeywords() {\r\n        let pageSize = 15;\r\n        return Array.from({ length: Math.ceil(this.keywords.length / pageSize) }, (_, i) =>\r\n          this.keywords.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      paginatedSynonyms() {\r\n        let pageSize = 15;\r\n        return Array.from({ length: Math.ceil(this.synonyms_list.length / pageSize) }, (_, i) =>\r\n          this.synonyms_list.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      totalPages() {\r\n        return this.paginatedKeywords.length;\r\n      },\r\n      totalPages2() {\r\n        return this.paginatedSynonyms.length;\r\n      }\r\n    },\r\n    methods: {\r\n        async removeKeyword(keyword) {\r\n          this.isLoading = true;  // 結束\r\n          const formData = new FormData();\r\n          formData.append('keyword', keyword);\r\n          // this.isLoading = true;\r\n          try{\r\n            const response = await fetch(web_api_url+'/remove_keyword_on_VectorDB/', { \r\n              method: 'POST',\r\n              body: formData\r\n            });\r\n            // const data = await response.json();\r\n            if (response.ok) {\r\n              this.keywords = this.keywords.filter(k => k.Keywords !== keyword);\r\n              this.recommendKeywords_list = this.recommendKeywords_list.filter(k => k !== keyword);\r\n              this.VDBkeywords = this.VDBkeywords.filter(k => k !== keyword);\r\n            }\r\n          }\r\n          catch (error) {\r\n            console.error(\"Error loading data:\", error);\r\n          } finally {\r\n              this.isLoading = false;  // 結束\r\n          }\r\n        },\r\n        async removeRecommandKeyword(keyword) {\r\n          this.isLoading = true;  // 結束\r\n          const formData = new FormData();\r\n          formData.append('keyword', keyword);\r\n          // this.isLoading = true;\r\n          try{\r\n            const response = await fetch(web_api_url+'/remove_keyword_on_VectorDB/', { \r\n              method: 'POST',\r\n              body: formData\r\n            });\r\n            // const data = await response.json();\r\n            if (response.ok) {\r\n              this.keywords = this.keywords.filter(k => k.Keywords !== keyword);\r\n              this.recommendKeywords_list = this.recommendKeywords_list.filter(k => k !== keyword);\r\n              this.VDBkeywords = this.VDBkeywords.filter(k => k !== keyword);\r\n            }\r\n          }\r\n          catch (error) {\r\n            console.error(\"Error loading data:\", error);\r\n          } finally {\r\n              this.isLoading = false;  // 結束\r\n          }\r\n        },\r\n        async showRecommendations(keyword) {\r\n            this.isLoading = true;\r\n            this.selectedKeyword = keyword;\r\n            this.showRecommendationsTable = true;\r\n            const formData = new FormData();\r\n            formData.append('message', this.selectedKeyword);\r\n            formData.append('class', [\"Hawoo_Keywords\"]);\r\n            const response = await fetch(web_api_url+'/recommend_keywords_list/', { // 替換為你的服務器端點\r\n            method: 'POST',\r\n            body: formData\r\n            });\r\n\r\n            const data = await response.json();\r\n            this.recommendKeywords_list = data.reply\r\n            this.isLoading = false;\r\n        },\r\n        prevPage(event) {\r\n          let clickedButtonid = event.target.id;\r\n          // console.log(clickedButtonid);\r\n          switch (clickedButtonid) {\r\n            case \"prevPage1\":\r\n              if (this.currentPage > 0) {\r\n                this.currentPage--;\r\n                this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n              }\r\n              break\r\n            case \"prevPage2\":\r\n              if (this.currentPage2 > 0) {\r\n                this.currentPage2--;\r\n                this.inputPage2 = this.currentPage2 + 1; // Adjust for user understanding\r\n              }\r\n              break\r\n          }\r\n        },\r\n        nextPage(event) {\r\n          let clickedButtonid = event.target.id;\r\n          // console.log(clickedButtonid);\r\n          switch (clickedButtonid) {\r\n            case \"nextPage1\":\r\n              if (this.currentPage < this.totalPages - 1) {\r\n                  this.currentPage++;\r\n                  this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n              }\r\n              break\r\n            case \"nextPage2\":\r\n              if (this.currentPage2 < this.totalPages2 - 1) {\r\n                  this.currentPage2++;\r\n                  this.inputPage2 = this.currentPage2 + 1; // Adjust for user understanding\r\n              }\r\n              break\r\n          }\r\n        },\r\n        goToPage(event) {\r\n          let inputpageid = event.target.id;\r\n          switch (inputpageid) {\r\n            case \"pagenumber1\":\r\n              if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\r\n                  this.currentPage = this.inputPage - 1; // Adjust for 0-based index\r\n              }\r\n              break\r\n            case \"pagenumber2\":\r\n              if (this.inputPage2 > 0 && this.inputPage2 <= this.totalPages2) {\r\n                  this.currentPage2 = this.inputPage2 - 1; // Adjust for 0-based index\r\n              }\r\n              break\r\n          }\r\n        },async KeywordsData() {\r\n          try {\r\n            const response = await fetch(web_api_url+'/return_keywords_data_all/');\r\n            const data = await response.json();\r\n\r\n            // 假設API返回的是一个標準的JSON格式的DataFrame\r\n            this.lastkeywords = data.lastdataframe;\r\n            this.VDBkeywords = data.VDBdataframe;\r\n            if (this.radioselectedOption=='lastKeywords'){\r\n              this.keywords = this.lastkeywords;\r\n            }\r\n            if (this.radioselectedOption=='VectorDBKeywords'){\r\n              this.keywords = this.VDBkeywords;\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error loading data:\", error);\r\n          }        \r\n      },async synonymsData() {\r\n        try {\r\n          const response = await fetch(web_api_url+'/synonyms_base/');\r\n          const data = await response.json();\r\n          // console.log(\"data\",data)\r\n\r\n          // 假設API返回的是一个標準的JSON格式的DataFrame\r\n          this.synonyms_list = data.dataframe;\r\n\r\n        } catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }        \r\n      }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.radiobutton{\r\n  display: flex;\r\n}\r\n.pipline {\r\n    display: flex;\r\n    border-radius: 10px;\r\n    margin-left: 20px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 20px; /* 調整數值以獲得所需的間距 */\r\n}\r\n.piplinestep {\r\n    margin-left: 50px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 50px; /* 調整數值以獲得所需的間距 */\r\n}\r\n.step1-table{\r\n    margin-top: 10px;\r\n    margin-bottom: 0px;\r\n}\r\n.pagenumber{\r\n  margin-top: 0px;\r\n  max-width: 60px;\r\n  max-height: 15px;\r\n  margin-left: 10px; /* 調整數值以獲得所需的間距 */\r\n  margin-right: 10px; /* 調整數值以獲得所需的間距 */\r\n}\r\n/* 加入些基本的樣式，讓表格看起來更整齊 */\r\ntable {\r\n  margin-top: 10px;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 10px;\r\n  width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n.PageControl{\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n/* 使得詞彙看起來像是可點擊的 */\r\n.clickable {\r\n  cursor: pointer;\r\n  color: blue; /* 讓文字為藍色，使其更像是一個連結 */\r\n  text-decoration: underline; /* 加上底線 */\r\n}\r\n\r\n.clickable:hover {\r\n  background-color: #f5f5f5; /* 滑鼠滑過時的背景色 */\r\n}\r\n</style>","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\UpdateVectorDB.vue",["46","47","48","49","50","51","52","53","54"],"<template>\n  <div>\n    <!-- 加載指示器 -->\n    <div v-if=\"isLoading\" class=\"loading-overlay\">\n      <img src=\"/jumpingsheep.gif\" alt=\"上傳中...\" class=\"loading-image\"/>\n    </div>\n    <!-- 第一部分 -->\n    <div v-if=\"isServerReturn==false\" class=\"First-Part\">\n      \n      <h3 class=\"title_description\">\n        上傳產品關鍵字資料(csv,xlsx)\n      </h3>\n      <input type=\"file\" @change=\"handleFileChange\">\n      <button class=\"delete-VectorDB\" @click=\"deleteVectorDB\">刪除向量資料庫</button>\n\n      <!-- 呈現欄位名稱的表格 -->\n      <div v-if=\"columns.length\">\n        <h3 class=\"title_description\">\n          選取1個Keywords對應欄位\n        </h3>\n        <table v-if=\"columns.length\">\n          <thead>\n            <tr>\n              <th>Select</th>\n              <th>Column Name</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"column in columns\" :key=\"column\">\n              <td><input type=\"checkbox\" v-model=\"selectedColumns[column]\"></td>\n              <td>{{ column }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <button class=\"submit-button\" @click=\"handleSubmit\" v-if=\"columns.length\">提交選取欄位</button>\n    </div>\n    \n    <!-- 第二部分 -->\n    <div v-if=\"isServerReturn\" class=\"Part2\">\n      <!-- 按鈕加載數據 -->\n      <button class=\"loadData-button\" @click=\"WatchKeywordsData\">觀看前處理資料</button>\n      <button v-if=\"isFetching==false\" class=\"update-vectorDB-button\" @click=\"vectorDB_info\">新增或更新Keywords向量資料庫</button>\n      <button class=\"delete-VectorDB\" @click=\"deleteVectorDB\">刪除向量資料庫</button>\n      <table v-if=\"isWatchData\">\n        <thead>\n          <tr>\n            <!-- 假設你知道你的DataFrame的列名 -->\n            <th>Keywords</th>\n            <!-- ... 其他列名 ... -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"row in dataTable\" :key=\"row.id\">\n            <td>{{ row['Keywords'] }}</td>\n            <!-- ... 其他數據列 ... -->\n          </tr>\n        </tbody>\n      </table>\n      <table v-if=\"isWatchData\">\n            <tr>\n                <th>Keywords總數量</th>\n            </tr>\n            <tbody>\n                <tr>\n                    <td>{{ keywordcount }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <!-- 第三部分 -->\n    <!-- <div v-if=\"isPart3\" class=\"Part3\"> -->\n      <!-- <table  v-if=\"VBTables.length\">\n          <thead>\n              <tr>\n                  <th>Select</th>\n                  <th>Vector DB Table Name</th>\n              </tr>\n          </thead>\n          <tbody>\n              <tr v-for=\"item in VBTables\"  :key=\"item\">\n                  <td><input type=\"checkbox\" v-model=\"VBselectedColumns[item]\"></td>\n                  <td>{{ item }}</td>\n              </tr>\n          </tbody>\n      </table> -->\n      <!-- <input type=\"text\" v-model=\"newVBData\" placeholder=\"Enter new data\">\n      <button @click=\"addData\">Add New Table Name</button> -->\n    <!-- </div> -->\n    <button class=\"submit-button\" @click=\"toggleFetching\" v-if=\"VBTables.length\">開始更新VectorDB</button>\n    <div v-if=\"isFetching | isOver\" class=\"insertVectorDBlog\">\n        <h4>{{Flaskdata.data }}</h4>\n    </div>\n  </div>\n</template>\n<script>\n  import Papa from 'papaparse';\n  import * as XLSX from 'xlsx';\n  import axios from 'axios';\n  const web_api_url = 'http://127.0.0.1:5000';\n  export default {\n    data() {\n      return {\n        data: [],\n        columns: [],          // 用於儲存 CSV 中的欄位名稱\n        selectedColumns: {},  // 用於儲存欄位的勾選狀態\n        selectedColumnsArray:[],\n        uploadedFile: null,  // 存儲上傳文件\n        isServerReturn: false,\n        isLoading: false,  // 默認為false\n        isWatchData:false,\n        dataTable: { attributeName: 'array'  // 初始化屬性\n                    },\n        keywordcount:0,\n        VBTables: { attributeName: 'array'  // 初始化屬性\n                    },\n        // newVBData: '',\n        isPart3: false,\n        // VBselectedColumns: {},\n        VBselectedColumnsArray: [\"Hawoo_Keywords\"],\n        Flaskdata: {},\n        isFetching:false,\n        fetchInterval: null,  // 用於存儲定期抓取的ID\n        isOver: false,\n      }\n    },\n    methods: {\n        handleFileChange(event) {\n        this.uploadedFile = event.target.files[0];\n        if (this.uploadedFile.name.includes('csv')) {\n          Papa.parse(this.uploadedFile, {\n            complete: (results) => {\n              this.data = results.data;\n              this.columns = results.data[0];\n            }\n          });\n        }\n        else if (this.uploadedFile.name.includes('xl')) {\n          const reader = new FileReader();\n          \n          reader.onload = (e) => {\n            const data = e.target.result;\n            const workbook = XLSX.read(data, { type: 'binary' });\n            \n            // Assuming first sheet and first row is header\n            const firstSheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[firstSheetName];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n            this.columns = jsonData[0]\n          };\n          reader.readAsBinaryString(this.uploadedFile);\n        }\n        else {\n            alert(\"請上傳CSV或Excel文件！\");\n        }\n      },async handleSubmit() {\n        this.selectedColumnsArray = Object.keys(this.selectedColumns).filter(column => this.selectedColumns[column]);\n        if (!this.uploadedFile) {\n            alert(\"請先選擇文件\");\n            return;\n          }\n  \n          if (this.selectedColumnsArray.length != 1) {\n            alert(\"請選擇1個欄位!\");\n            return;\n          }\n  \n          // 使用FormData來上傳文件和列名\n          const formData = new FormData();\n          formData.append('file', this.uploadedFile);\n          formData.append('columns', this.selectedColumnsArray);\n          // 開始上傳\n          this.isLoading = true;\n          try {\n            const response = await fetch(web_api_url+'/upload_keywords_data/', { // 替換為你的服務器端點\n              method: 'POST',\n              body: formData\n            });\n            if (response.ok) {\n              alert('文件上傳成功！');\n            } else {\n              alert('文件上傳失敗:' + response.message);\n            }\n          } catch (error) {\n            console.error(\"上傳錯誤:\", error);\n            alert('上傳過程中出現錯誤，請重試！');\n          } finally {\n            this.isLoading = false;  // 結束上傳\n            this.isServerReturn = true;\n          }\n      },async WatchKeywordsData() {\n        this.isWatchData = !this.isWatchData;\n  \n        if (this.isWatchData) {\n          try {\n            const response = await fetch(web_api_url+'/return_keywords_data/');\n            const data = await response.json();\n  \n            // 假設API返回的是一个標準的JSON格式的DataFrame\n            this.dataTable = data.dataframe;\n\n            this.keywordcount = data.keywords_count;\n  \n          } catch (error) {\n            console.error(\"Error loading data:\", error);\n          }\n        }\n      },async deleteVectorDB(){\n        if (window.confirm('確定要刪除向量資料庫嗎？')) {\n          const formData = new FormData();\n          formData.append('VBTable_name', this.VBselectedColumnsArray);\n          this.isLoading = true;\n          try{\n            const response = await fetch(web_api_url+'/remove_vector_table/', { // 替換為你的服務器端點\n              method: 'POST',\n              body: formData\n            });\n            const data = await response.json();\n            if (response.ok) {\n              if (data.isRemoved==true){alert('Vector DB刪除成功');}\n              if (data.isRemoved==false){alert('Vector DB原本就不存在');}\n            } else {\n              alert('Vector DB刪除發生異常:' + response.message);\n            }\n            console.log(\"Delete vector DB:\", data);\n          } \n          catch (error) {\n            console.error(\"Error loading data:\", error);\n          } finally {\n              this.isLoading = false;  // 結束\n              this.isFetching = false;\n          }\n        }\n      },async StartUpdateVDB(){\n  \n        if (this.VBselectedColumnsArray.length != 1) {\n          alert(\"請選擇1個欄位!\");\n          return;\n        }\n\n        // 使用FormData來上傳文件和列名\n        const formData = new FormData();\n        formData.append('VBTable_name', this.VBselectedColumnsArray);\n        \n        this.isFetching = !this.isFetching;   \n        try{\n          const response = await fetch(web_api_url+'/update_vector_DB/', { // 替換為你的服務器端點\n            method: 'POST',\n            body: formData\n          });\n          const data = await response.json();\n          console.log(\"Start Update vector DB:\", data);\n        } \n        catch (error) {\n          console.error(\"Error loading data:\", error);\n        }\n      },async vectorDB_info() {\n        try{\n          this.isWatchData = false;\n          const response = await fetch(web_api_url+'/return_table_information/');\n          const data = await response.json();\n          this.VBTables = data[\"vectorDB_table_name\"];\n          this.isPart3 = !this.isPart3;\n        } \n        catch (error) {\n          console.error(\"Error loading data:\", error);\n        }\n      },async handleVBSubmit() {\n        this.VBselectedColumnsArray = Object.keys(this.VBselectedColumns).filter(column => this.VBselectedColumns[column]);\n  \n        if (this.VBselectedColumnsArray.length != 1) {\n          alert(\"請選擇1個欄位!\");\n          return;\n        }\n\n        // 使用FormData來上傳文件和列名\n        const formData = new FormData();\n        formData.append('VBTable_name', this.VBselectedColumnsArray);\n        // console.log(\"formData\", formData);\n        // 開始上傳\n        this.isLoading = true;\n        try {\n          const response = await fetch(web_api_url+'/update_vector_DB/', { // 替換為你的服務器端點\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            alert('文件上傳成功！');\n            console.log(response); // 處理来自服務器的響應\n          } else {\n            alert('文件上傳失敗:' + response.message);\n          }\n        } catch (error) {\n          console.error(\"上傳錯誤:\", error);\n          alert('上傳過程中出現錯誤，請重試！');\n        } finally {\n          this.isLoading = false;  // 結束上傳\n          this.isServerReturn = true;\n        }\n      // },addData() {\n      //           if (this.newVBData) {\n      //               this.VBTables.push(this.newVBData);\n      //               this.newVBData = '';\n      //           } else {\n      //               alert('Please enter some data.');\n      //           }\n      },fetchData() {\n        axios.get(web_api_url+'/get_vector_DB_log')\n          .then(response => {\n            this.Flaskdata = response.data;\n            if (response.data['reload']===true){\n              this.isFetching = false;\n            }\n            if (response.data['over']===true){\n              this.isFetching = false;\n              this.isOver = true;\n            }\n          });\n      },toggleFetching() {\n        this.StartUpdateVDB() \n        if (this.isFetching) {\n          this.fetchData();\n          this.fetchInterval = setInterval(this.fetchData, 1000);\n        } else {\n          clearInterval(this.fetchInterval);  // 如果不抓取, 則停止定期抓取\n        }\n      }\n    }\n\n  }\n</script>\n\n<style>\n/* 加入些基本的樣式，讓表格看起來更整齊 */\n  table {\n    margin-top: 10px;\n    width: 100%;\n    border-collapse: collapse;\n    margin-bottom: 10px;\n    width: 500px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  \n  th, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n  \n  th {\n    background-color: #f2f2f2;\n  }\n  .loading-overlay {\n    position: fixed;   /* 全屏覆盖 */\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(255, 255, 255, 0.8);  /* 半透明的白色背景 */\n    display: flex;  /* 使用 Flexbox */\n    justify-content: center;  /* 水平居中 */\n    align-items: center;  /* 垂直居中 */\n    z-index: 1000;  /* 保證在最前面 */\n  }\n  \n  .loading-image {\n    max-width: 400px;  /* 或其他合適的大小 */\n    max-height: 400px;\n  }\n\n  .submit-button{\n    margin-top: 50px;\n    margin-bottom: 50px;\n  }\n</style>","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AITrain.vue",["55","56","57","58","59"],"<template>\r\n    <div>\r\n      \r\n      <!-- 加載指示器 -->\r\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n        <img src=\"/jumpingsheep.gif\" alt=\"上傳中...\" class=\"loading-image\"/>\r\n      </div>\r\n      <!-- 第一部分 -->\r\n      <div v-if=\"isServerReturn==false\" class=\"First-Part\">\r\n        <h3 class=\"title_description\">\r\n            上傳產品中英文名稱，以進行模型訓練(csv,xlsx)\r\n        </h3>\r\n  \r\n        <!-- <input type=\"file\" @change=\"handleCSV\"> -->\r\n        <input type=\"file\" @change=\"handleFileChange\">\r\n        \r\n      <div v-if=\"columns.length\">\r\n        <h3 class=\"title_description\">\r\n          選取2個相似對應欄位\r\n        </h3>\r\n        <!-- 呈現欄位名稱的表格 -->\r\n        <table v-if=\"columns.length\">\r\n          <thead>\r\n            <tr>\r\n              <th>Select</th>\r\n              <th>Column Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"column in columns\" :key=\"column\">\r\n              <td><input type=\"checkbox\" v-model=\"selectedColumns[column]\"></td>\r\n              <td>{{ column }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button class=\"submit-button\" @click=\"handleSubmit\" v-if=\"columns.length\">提交選取欄位</button>\r\n      </div>\r\n    </div>\r\n  \r\n      <!-- 第二部分 -->\r\n      <div v-if=\"isServerReturn\" class=\"Next-Part\">\r\n        <!-- 按鈕加載數據 -->\r\n        <button class=\"loadData-button\" @click=\"WatchData\">觀看前處理資料</button>\r\n        <button class=\"back-button\" @click=\"GoBack\">返回前一步</button>\r\n        <button v-if=\"isFetching==false\" class=\"start-train-button\" @click=\"toggleFetching\">Train SBERT Model</button>\r\n        <table v-if=\"isWatchData\">\r\n          <thead>\r\n            <tr>\r\n              <!-- 假設你知道你的DataFrame的列名 -->\r\n              <th>Sentence1</th>\r\n              <th>Sentence2</th>\r\n              <!-- ... 其他列名 ... -->\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in dataTable\" :key=\"row.id\">\r\n              <td>{{ row['sentence1'] }}</td>\r\n              <td>{{ row['sentence2'] }}</td>\r\n              <!-- ... 其他數據列 ... -->\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div v-if=\"isFetching | isTrained\" class=\"trainlog\">\r\n          <h4>{{Flaskdata.data }}</h4>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Papa from 'papaparse';\r\n  import * as XLSX from 'xlsx';\r\n  import axios from 'axios';\r\n  const web_api_url = 'http://127.0.0.1:5000';\r\n  export default {\r\n    data() {\r\n      return {\r\n        data: [],\r\n        columns: [],          // 用於儲存 CSV 中的欄位名稱\r\n        selectedColumns: {},  // 用於儲存欄位的勾選狀態\r\n        selectedColumnsArray:[],\r\n        uploadedFile: null,  // 存儲上傳文件\r\n        isLoading: false,  // 默認為false\r\n        isWatchData:false,\r\n        isServerReturn: false,\r\n        dataTable: [],\r\n        Flaskdata: {},\r\n        isFetching:false,\r\n        fetchInterval: null,  // 用於存儲定期抓取的ID\r\n        isTrained: false,\r\n      }\r\n    },\r\n    methods: {\r\n        handleFileChange(event) {\r\n        this.uploadedFile = event.target.files[0];\r\n        if (this.uploadedFile.name.includes('csv')) {\r\n          Papa.parse(this.uploadedFile, {\r\n            complete: (results) => {\r\n              this.data = results.data;\r\n              // console.log(\"this.data\", this.data); // assuming first row is header\r\n              this.columns = results.data[0];\r\n              // console.log(\"Column Names:\", this.columns); // assuming first row is header\r\n            }\r\n          });\r\n        }\r\n        else if (this.uploadedFile.name.includes('xl')) {\r\n          // console.log(\"file name\", this.uploadedFile); // assuming first row is header\r\n          const reader = new FileReader();\r\n          \r\n          reader.onload = (e) => {\r\n            const data = e.target.result;\r\n            const workbook = XLSX.read(data, { type: 'binary' });\r\n            \r\n            // Assuming first sheet and first row is header\r\n            const firstSheetName = workbook.SheetNames[0];\r\n            const worksheet = workbook.Sheets[firstSheetName];\r\n            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n            this.columns = jsonData[0]\r\n            // console.log(\"Column Names:\", this.columns);\r\n          };\r\n          reader.readAsBinaryString(this.uploadedFile);\r\n          }\r\n          else {\r\n              alert(\"請上傳CSV或Excel文件！\");\r\n            }\r\n        },async handleSubmit() {\r\n        this.selectedColumnsArray = Object.keys(this.selectedColumns).filter(column => this.selectedColumns[column]);\r\n        if (!this.uploadedFile) {\r\n            alert(\"請先選擇文件\");\r\n            return;\r\n          }\r\n  \r\n          if (this.selectedColumnsArray.length != 2) {\r\n            alert(\"請選擇2個欄位!\");\r\n            return;\r\n          }\r\n  \r\n          // 使用FormData來上傳文件和列名\r\n          const formData = new FormData();\r\n          formData.append('file', this.uploadedFile);\r\n          // console.log(\"selectedColumnsArray Names:\", this.selectedColumnsArray);\r\n          formData.append('columns', this.selectedColumnsArray);\r\n          // console.log(\"formData\", formData);\r\n          // 開始上傳\r\n          this.isLoading = true;\r\n          try {\r\n            const response = await fetch(web_api_url+'/upload_train_data/', { // 替換為你的服務器端點\r\n              method: 'POST',\r\n              body: formData\r\n            });\r\n            if (response.ok) {\r\n              alert('文件上傳成功！');\r\n              console.log(response); // 處理来自服務器的響應\r\n            } else {\r\n              alert('文件上傳失敗:' + response.message);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"上傳錯誤:\", error);\r\n            alert('上傳過程中出現錯誤，請重試！');\r\n          } finally {\r\n            this.isLoading = false;  // 結束上傳\r\n            this.isServerReturn = true;\r\n          }\r\n      },async WatchData() {\r\n        this.isWatchData = !this.isWatchData;\r\n  \r\n        if (this.isWatchData) {\r\n          try {\r\n            const response = await fetch(web_api_url+'/return_train_data/');\r\n            const data = await response.json();\r\n  \r\n            // 假設API返回的是一个標準的JSON格式的DataFrame\r\n            this.dataTable = data;\r\n  \r\n          } catch (error) {\r\n            console.error(\"Error loading data:\", error);\r\n          }\r\n        }\r\n      },GoBack(){\r\n        this.isServerReturn = false;\r\n      },async StartTrain(){\r\n        try{\r\n          const response = await fetch(web_api_url+'/train/');\r\n          const data = await response.json();\r\n          console.log(\"StartTrain data:\", data);\r\n        } \r\n        catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }\r\n      },fetchData() {\r\n        axios.get(web_api_url+'/get_train_log')\r\n          .then(response => {\r\n            this.Flaskdata = response.data;\r\n            if (response.data['reload']===true){\r\n              this.isFetching = false;\r\n            }\r\n            if (response.data['trained']===true){\r\n              this.isFetching = false;\r\n              this.isTrained = true;\r\n            }\r\n          });\r\n      },toggleFetching() {\r\n        this.StartTrain()\r\n        this.isFetching = !this.isFetching;    \r\n        if (this.isFetching) {\r\n          this.fetchData();\r\n          this.fetchInterval = setInterval(this.fetchData, 1000);\r\n        } else {\r\n          clearInterval(this.fetchInterval);  // 如果不抓取, 則停止定期抓取\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  h3 {\r\n    margin-top: 20px;\r\n  }\r\n\r\n\r\n  /* 你可以加入些基本的樣式，讓表格看起來更整齊 */\r\n  table {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 10px;\r\n    width: 500px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  .loading-overlay {\r\n    position: fixed;   /* 全屏覆盖 */\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(255, 255, 255, 0.8);  /* 半透明的白色背景 */\r\n    display: flex;  /* 使用 Flexbox */\r\n    justify-content: center;  /* 水平居中 */\r\n    align-items: center;  /* 垂直居中 */\r\n    z-index: 1000;  /* 保證在最前面 */\r\n  }\r\n  \r\n  .loading-image {\r\n    max-width: 400px;  /* 或其他合適的大小 */\r\n    max-height: 400px;\r\n  }\r\n  \r\n  .submit-button {\r\n    background: linear-gradient(to bottom, #b0b0b0, #d9d8d8); /* 灰色漸變從較亮到較暗 */\r\n    color: rgb(4, 4, 4);  /* 文本顏色為白色 */\r\n    border: none;  /* 去除邊框 */\r\n    padding: 10px 20px;  /* 添加一些內邊距 */\r\n    border-radius: 5px;  /* 輕微的圓角 */\r\n    cursor: pointer;  /* 鼠標懸停時顯示手形 */\r\n    transition: 0.3s;  /* 平滑的過渡效果 */\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  /* 當屬標懸停在按鈕上時，為其應用一個稍微亮一些的漸變背景 */\r\n  .submit-button:hover {\r\n    background: linear-gradient(to bottom, #c0c0c0, #d9d8d8);\r\n  }\r\n  \r\n  /* 如果你還想在按鈕被點擊時有樣式變化，可以添加以下樣式 */\r\n  .submit-button:active {\r\n    background: linear-gradient(to bottom, #dedede, #b0b0b0); /* 顏色轉變 */\r\n  }\r\n  </style>","E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\components\\WebsiteDescription.vue",[],"E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\components\\RecommendationKeywords.vue",["60"],"<template>\r\n    <div>\r\n      <h3>推薦關鍵字： {{ keyword }}</h3>\r\n      <table>\r\n        <thead>\r\n            <tr>\r\n                <th>選取</th>\r\n                <th>關鍵字</th>\r\n                <th >刪除</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"recommended in recommendKeywords_list\" :key=\"recommended\">\r\n            <td><input type=\"checkbox\" v-model=\"selectedColumns[recommended]\"></td>\r\n            <td>{{ recommended }}</td>\r\n            <td><button @click=\"removeKeywordrequest(recommended)\">Delete</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button class=\"submit-button\" @click=\"SubmitRecommend\" >上傳同義詞庫</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  const web_api_url = 'http://127.0.0.1:5000';\r\n  export default {\r\n    data(){\r\n        return{\r\n            selectedColumns:{}\r\n        }\r\n    },\r\n    props: {\r\n      keyword: String,\r\n      recommendKeywords_list: Array\r\n    },\r\n    methods: {\r\n      removeKeywordrequest(keyword) {\r\n        this.$emit('update-value', keyword);\r\n      },\r\n      async SubmitRecommend() {\r\n        this.selectedColumnsArray = Object.keys(this.selectedColumns).filter(column => this.selectedColumns[column]);\r\n  \r\n          if (this.selectedColumnsArray.length == 0) {\r\n            alert(\"請選擇1或1以上的欄位數量\");\r\n            return;\r\n          }  \r\n          // 使用FormData來上傳文件和列名\r\n          const formData = new FormData();\r\n          formData.append('keyword', this.keyword);\r\n          // console.log(\"selectedColumnsArray Names:\", this.selectedColumnsArray);\r\n          formData.append('synonyms', this.selectedColumnsArray);\r\n          // console.log(\"formData\", formData);\r\n          // 開始上傳\r\n          try {\r\n            const response = await fetch(web_api_url+'/synonyms_write/', { // 替換為你的服務器端點\r\n              method: 'POST',\r\n              body: formData\r\n            });\r\n            this.selectedColumns = {};\r\n            if (response.ok) {\r\n              alert('文件上傳成功！');\r\n              // console.log(response); // 處理来自服務器的響應\r\n            } else {\r\n              alert('文件上傳失敗:' + response.message);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"上傳錯誤:\", error);\r\n            alert('上傳過程中出現錯誤，請重試！');\r\n          }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\ntable {\r\n  margin-top: 10px;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 10px;\r\n  width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>",{"ruleId":"61","severity":1,"message":"62","line":149,"column":13,"nodeType":"63","messageId":"64","endLine":149,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":172,"column":13,"nodeType":"63","messageId":"64","endLine":172,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":258,"column":13,"nodeType":"63","messageId":"64","endLine":258,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":270,"column":11,"nodeType":"63","messageId":"64","endLine":270,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":186,"column":13,"nodeType":"63","messageId":"64","endLine":186,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":206,"column":13,"nodeType":"63","messageId":"64","endLine":206,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":226,"column":13,"nodeType":"63","messageId":"64","endLine":226,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":229,"column":13,"nodeType":"63","messageId":"64","endLine":229,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":253,"column":11,"nodeType":"63","messageId":"64","endLine":253,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":256,"column":11,"nodeType":"63","messageId":"64","endLine":256,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":267,"column":11,"nodeType":"63","messageId":"64","endLine":267,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":290,"column":13,"nodeType":"63","messageId":"64","endLine":290,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":295,"column":11,"nodeType":"63","messageId":"64","endLine":295,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":153,"column":15,"nodeType":"63","messageId":"64","endLine":153,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":158,"column":13,"nodeType":"63","messageId":"64","endLine":158,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":176,"column":13,"nodeType":"63","messageId":"64","endLine":176,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":185,"column":11,"nodeType":"63","messageId":"64","endLine":185,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":188,"column":11,"nodeType":"63","messageId":"64","endLine":188,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":67,"column":13,"nodeType":"63","messageId":"64","endLine":67,"endColumn":26},"no-console","Unexpected console statement.","MemberExpression","unexpected"]