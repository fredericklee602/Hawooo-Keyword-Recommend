{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: {\n    VBselectedColumnsArray: \"Hawoo_Keywords\"\n  },\n  props: {\n    keyword: String\n  },\n  computed: {\n    recommendations() {\n      // Here you can implement logic to provide keyword recommendations based on the selected keyword.\n      // For simplicity, I'm returning a dummy array.\n      return [`${this.keyword} 1`, `${this.keyword} 2`, `${this.keyword} 3`];\n    }\n  },\n  methods: {\n    async recommend_keywords() {\n      const response = await fetch(web_api_url + \"/recommend_keywords/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: this.keyword,\n          'class': this.VBselectedColumnsArray\n        })\n      });\n      const data = await response.json();\n      this.messages.push({\n        type: \"bot\",\n        content: data.reply\n      });\n      this.userMessage = \"\";\n    }\n  }\n};","map":{"version":3,"names":["data","VBselectedColumnsArray","props","keyword","String","computed","recommendations","methods","recommend_keywords","response","fetch","web_api_url","method","headers","body","JSON","stringify","message","json","messages","push","type","content","reply","userMessage"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\components\\RecommendationKeywords.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Recommendations for {{ keyword }}</h3>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"recommended in recommendations\" :key=\"recommended\">\r\n            <td>{{ recommended }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data:{\r\n        VBselectedColumnsArray: \"Hawoo_Keywords\"\r\n    },\r\n    props: {\r\n      keyword: String\r\n    },\r\n    computed: {\r\n      recommendations() {\r\n        // Here you can implement logic to provide keyword recommendations based on the selected keyword.\r\n        // For simplicity, I'm returning a dummy array.\r\n        return [`${this.keyword} 1`, `${this.keyword} 2`, `${this.keyword} 3`];\r\n      }\r\n    },\r\n    methods:{\r\n        async recommend_keywords() {\r\n            const response = await fetch(web_api_url+\"/recommend_keywords/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ message: this.keyword,'class':this.VBselectedColumnsArray }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            this.messages.push({ type: \"bot\", content: data.reply });\r\n            this.userMessage = \"\";\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";AAcE,eAAe;EACbA,IAAI,EAAC;IACDC,sBAAsB,EAAE;EAC5B,CAAC;EACDC,KAAK,EAAE;IACLC,OAAO,EAAEC;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB;MACA;MACA,OAAO,CAAE,GAAE,IAAI,CAACH,OAAO,IAAI,EAAG,GAAE,IAAI,CAACA,OAAO,IAAI,EAAG,GAAE,IAAI,CAACA,OAAO,IAAI,CAAC;IACxE;EACF,CAAC;EACDI,OAAO,EAAC;IACJ,MAAMC,kBAAkBA,CAAA,EAAG;MACvB,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACC,WAAW,GAAC,sBAAsB,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE,IAAI,CAACd,OAAO;UAAC,OAAO,EAAC,IAAI,CAACF;QAAuB,CAAC;MAClF,CAAC,CAAC;MAEF,MAAMD,IAAG,GAAI,MAAMS,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAEtB,IAAI,CAACuB;MAAM,CAAC,CAAC;MACxD,IAAI,CAACC,WAAU,GAAI,EAAE;IACzB;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}