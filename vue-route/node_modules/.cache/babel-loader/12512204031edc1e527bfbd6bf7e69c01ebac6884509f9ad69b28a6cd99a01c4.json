{"ast":null,"code":"const web_api_url = 'http://127.0.0.1:5000';\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\nexport default {\n  components: {\n    RecommendationKeywords\n  },\n  data() {\n    this.KeywordsData();\n    return {\n      keywords: [],\n      currentPage: 0,\n      selectedKeyword: '',\n      showRecommendationsTable: false,\n      recommendKeywords_list: []\n    };\n  },\n  computed: {\n    paginatedKeywords() {\n      let pageSize = 10;\n      return Array.from({\n        length: Math.ceil(this.keywords.length / pageSize)\n      }, (_, i) => this.keywords.slice(i * pageSize, i * pageSize + pageSize));\n    },\n    totalPages() {\n      return this.paginatedKeywords.length;\n    }\n  },\n  methods: {\n    async showRecommendations(keyword) {\n      this.selectedKeyword = keyword;\n      this.showRecommendationsTable = true;\n      const response = await fetch(web_api_url + \"/recommend_keywords_list/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: this.keyword,\n          'class': [\"Hawoo_Keywords\"]\n        })\n      });\n      const data = await response.json();\n      this.recommendKeywords_list = data.reply;\n    },\n    prevPage() {\n      if (this.currentPage > 0) {\n        this.currentPage--;\n        this.inputPage = this.currentPage + 1; // Adjust for user understanding\n      }\n    },\n\n    nextPage() {\n      if (this.currentPage < this.totalPages - 1) {\n        this.currentPage++;\n        this.inputPage = this.currentPage + 1; // Adjust for user understanding\n      }\n    },\n\n    goToPage() {\n      if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\n        this.currentPage = this.inputPage - 1; // Adjust for 0-based index\n      }\n    },\n\n    async KeywordsData() {\n      try {\n        const response = await fetch(web_api_url + '/return_keywords_data/');\n        // console.log(\"response\", response);\n        const data = await response.json();\n\n        // 假設API返回的是一个標準的JSON格式的DataFrame\n        this.keywords = data.dataframe;\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["web_api_url","RecommendationKeywords","components","data","KeywordsData","keywords","currentPage","selectedKeyword","showRecommendationsTable","recommendKeywords_list","computed","paginatedKeywords","pageSize","Array","from","length","Math","ceil","_","i","slice","totalPages","methods","showRecommendations","keyword","response","fetch","method","headers","body","JSON","stringify","message","json","reply","prevPage","inputPage","nextPage","goToPage","dataframe","error","console"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"keyword in paginatedKeywords[currentPage]\" :key=\"keyword\">\r\n            <td >{{ keyword.index }}</td>\r\n            <td @click=\"showRecommendations(keyword.Keywords)\">{{ keyword.Keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button @click=\"prevPage\">上一頁</button>\r\n        <input type=\"number\" v-model.number=\"inputPage\" @change=\"goToPage\" />\r\n        <button @click=\"nextPage\">下一頁</button>\r\n      </div>\r\n\r\n      <RecommendationKeywords v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" :recommendKeywords_list=\"recommendKeywords_list\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\r\nexport default {\r\n    components: {\r\n      RecommendationKeywords\r\n    },\r\n    data() {\r\n    this.KeywordsData()\r\n      return {\r\n        keywords: [],\r\n        currentPage: 0,\r\n        selectedKeyword: '',\r\n        showRecommendationsTable: false,\r\n        recommendKeywords_list: []\r\n      }\r\n    },\r\n    computed: {\r\n      paginatedKeywords() {\r\n        let pageSize = 10;\r\n        return Array.from({ length: Math.ceil(this.keywords.length / pageSize) }, (_, i) =>\r\n          this.keywords.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      totalPages() {\r\n        return this.paginatedKeywords.length;\r\n      }\r\n    },\r\n    methods: {\r\n        async showRecommendations(keyword) {\r\n            this.selectedKeyword = keyword;\r\n            this.showRecommendationsTable = true;\r\n            const response = await fetch(web_api_url+\"/recommend_keywords_list/\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ message: this.keyword,'class':[\"Hawoo_Keywords\"]}),\r\n                });\r\n\r\n            const data = await response.json();\r\n            this.recommendKeywords_list = data.reply\r\n        },\r\n        prevPage() {\r\n        if (this.currentPage > 0) {\r\n            this.currentPage--;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        nextPage() {\r\n        if (this.currentPage < this.totalPages - 1) {\r\n            this.currentPage++;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        goToPage() {\r\n        if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\r\n            this.currentPage = this.inputPage - 1; // Adjust for 0-based index\r\n        }\r\n        },async KeywordsData() {\r\n        try {\r\n        const response = await fetch(web_api_url+'/return_keywords_data/');\r\n        // console.log(\"response\", response);\r\n        const data = await response.json();\r\n\r\n        // 假設API返回的是一个標準的JSON格式的DataFrame\r\n        this.keywords = data.dataframe;\r\n\r\n        } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        }        \r\n      }\r\n    }\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}