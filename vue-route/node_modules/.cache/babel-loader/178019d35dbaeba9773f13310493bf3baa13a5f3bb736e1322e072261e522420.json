{"ast":null,"code":"const web_api_url = 'http://127.0.0.1:5000';\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\nexport default {\n  components: {\n    RecommendationKeywords\n  },\n  async onMonut() {\n    await this.KeywordsData(), await this.synonymsData();\n  },\n  data() {\n    return {\n      input_text: '',\n      keywords: [],\n      currentPage: 0,\n      selectedKeyword: '',\n      showRecommendationsTable: false,\n      recommendKeywords_list: [],\n      synonyms_list: [],\n      inputPage: 1\n    };\n  },\n  computed: {\n    paginatedKeywords() {\n      let pageSize = 15;\n      return Array.from({\n        length: Math.ceil(this.keywords.length / pageSize)\n      }, (_, i) => this.keywords.slice(i * pageSize, i * pageSize + pageSize));\n    },\n    totalPages() {\n      return this.paginatedKeywords.length;\n    }\n  },\n  methods: {\n    async showRecommendations(keyword) {\n      this.selectedKeyword = keyword;\n      this.showRecommendationsTable = true;\n      const formData = new FormData();\n      formData.append('message', this.selectedKeyword);\n      formData.append('class', [\"Hawoo_Keywords\"]);\n      console.log(\"formData\", formData);\n      const response = await fetch(web_api_url + '/recommend_keywords_list/', {\n        // 替換為你的服務器端點\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      this.recommendKeywords_list = data.reply;\n    },\n    prevPage() {\n      if (this.currentPage > 0) {\n        this.currentPage--;\n        this.inputPage = this.currentPage + 1; // Adjust for user understanding\n      }\n    },\n\n    nextPage() {\n      if (this.currentPage < this.totalPages - 1) {\n        this.currentPage++;\n        this.inputPage = this.currentPage + 1; // Adjust for user understanding\n      }\n    },\n\n    goToPage() {\n      if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\n        this.currentPage = this.inputPage - 1; // Adjust for 0-based index\n      }\n    },\n\n    async KeywordsData() {\n      try {\n        const response = await fetch(web_api_url + '/return_keywords_data_all/');\n        const data = await response.json();\n\n        // 假設API返回的是一个標準的JSON格式的DataFrame\n        this.keywords = data.dataframe;\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    },\n    async synonymsData() {\n      try {\n        const response = await fetch(web_api_url + '/synonyms_base/');\n        const data = await response.json();\n        console.log(\"data\", data);\n\n        // 假設API返回的是一个標準的JSON格式的DataFrame\n        this.synonyms_list = data.dataframe;\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["web_api_url","RecommendationKeywords","components","onMonut","KeywordsData","synonymsData","data","input_text","keywords","currentPage","selectedKeyword","showRecommendationsTable","recommendKeywords_list","synonyms_list","inputPage","computed","paginatedKeywords","pageSize","Array","from","length","Math","ceil","_","i","slice","totalPages","methods","showRecommendations","keyword","formData","FormData","append","console","log","response","fetch","method","body","json","reply","prevPage","nextPage","goToPage","dataframe","error"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue"],"sourcesContent":["<template>\r\n    <div class=\"pipline\">\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step1：輸入或點擊關鍵字</h3>\r\n      <div>\r\n        <input v-model=\"input_text\" placeholder=\"關鍵字輸入\" />\r\n        <button @click=\"showRecommendations(input_text)\">Send</button>\r\n      </div>\r\n      <table class=\"step1-table\">\r\n        <thead>\r\n          <tr>\r\n              <th>index</th>\r\n              <th>關鍵字集合</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"keyword in paginatedKeywords[currentPage]\" :key=\"keyword\">\r\n            <td >{{ keyword.index }}</td>\r\n            <td @click=\"showRecommendations(keyword.Keywords)\">{{ keyword.Keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button @click=\"prevPage\">上一頁</button>\r\n        <input class=\"pagenumber\" type=\"number\" v-model.number=\"inputPage\" @change=\"goToPage\" />\r\n        /{{ totalPages }}\r\n        <button @click=\"nextPage\">下一頁</button>\r\n      </div>\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step2：選取多個同義詞，並提交同義詞庫</h3>\r\n      <RecommendationKeywords v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" :recommendKeywords_list=\"recommendKeywords_list\" />\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step3：同義詞庫</h3>\r\n     <table>\r\n        <thead>\r\n            <tr>\r\n              <th>關鍵字</th>\r\n              <th>同義詞</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"synonyms in synonyms_list\" :key=\"synonyms\">\r\n            <td >{{ synonyms.keyword }}</td>\r\n            <td >{{ synonyms.similarity_keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button class=\"submit-button\" @click=\"synonymsData\" >更新顯示同義詞庫</button>\r\n     </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\r\nexport default {\r\n    components: {\r\n      RecommendationKeywords\r\n    },\r\n    async onMonut(){\r\n      await this.KeywordsData(),\r\n      await this.synonymsData()\r\n    },\r\n    data() {\r\n      return {\r\n        input_text:'',\r\n        keywords: [],\r\n        currentPage: 0,\r\n        selectedKeyword: '',\r\n        showRecommendationsTable: false,\r\n        recommendKeywords_list: [],\r\n        synonyms_list:[],\r\n        inputPage: 1\r\n      }\r\n    },\r\n    computed: {\r\n      paginatedKeywords() {\r\n        let pageSize = 15;\r\n        return Array.from({ length: Math.ceil(this.keywords.length / pageSize) }, (_, i) =>\r\n          this.keywords.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      totalPages() {\r\n        return this.paginatedKeywords.length;\r\n      }\r\n    },\r\n    methods: {\r\n        async showRecommendations(keyword) {\r\n            this.selectedKeyword = keyword;\r\n            this.showRecommendationsTable = true;\r\n            const formData = new FormData();\r\n            formData.append('message', this.selectedKeyword);\r\n            formData.append('class', [\"Hawoo_Keywords\"]);\r\n            console.log(\"formData\",formData)\r\n            const response = await fetch(web_api_url+'/recommend_keywords_list/', { // 替換為你的服務器端點\r\n            method: 'POST',\r\n            body: formData\r\n            });\r\n\r\n            const data = await response.json();\r\n            this.recommendKeywords_list = data.reply\r\n        },\r\n        prevPage() {\r\n          if (this.currentPage > 0) {\r\n              this.currentPage--;\r\n              this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n          }\r\n        },\r\n        nextPage() {\r\n          if (this.currentPage < this.totalPages - 1) {\r\n              this.currentPage++;\r\n              this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n          }\r\n        },\r\n        goToPage() {\r\n          if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\r\n              this.currentPage = this.inputPage - 1; // Adjust for 0-based index\r\n          }\r\n        },async KeywordsData() {\r\n          try {\r\n            const response = await fetch(web_api_url+'/return_keywords_data_all/');\r\n            const data = await response.json();\r\n\r\n            // 假設API返回的是一个標準的JSON格式的DataFrame\r\n            this.keywords = data.dataframe;\r\n\r\n          } catch (error) {\r\n            console.error(\"Error loading data:\", error);\r\n          }        \r\n      },async synonymsData() {\r\n        try {\r\n          const response = await fetch(web_api_url+'/synonyms_base/');\r\n          const data = await response.json();\r\n          console.log(\"data\",data)\r\n\r\n          // 假設API返回的是一个標準的JSON格式的DataFrame\r\n          this.synonyms_list = data.dataframe;\r\n\r\n        } catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }        \r\n      }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.pipline {\r\n    display: flex;\r\n    border-radius: 10px;\r\n    margin-left: 20px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 20px; /* 調整數值以獲得所需的間距 */\r\n}\r\n.piplinestep {\r\n    margin-left: 50px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 50px; /* 調整數值以獲得所需的間距 */\r\n}\r\n.step1-table{\r\n    margin-top: 10px;\r\n    margin-bottom: 0px;\r\n}\r\n.pagenumber{\r\n  margin-top: 0px;\r\n  max-width: 60px;\r\n  max-height: 15px;\r\n  margin-left: 10px; /* 調整數值以獲得所需的間距 */\r\n  margin-right: 10px; /* 調整數值以獲得所需的間距 */\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}