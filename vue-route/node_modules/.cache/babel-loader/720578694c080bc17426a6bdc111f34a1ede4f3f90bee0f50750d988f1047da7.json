{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Select\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Column Name\")])], -1 /* HOISTED */);\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileChange && $options.handleFileChange(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" 呈現欄位名稱的表格 \"), $data.columns.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, column => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: column\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => $data.selectedColumns[column] = $event\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelCheckbox, $data.selectedColumns[column]]])]), _createElementVNode(\"td\", null, _toDisplayString(column), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.columns.length ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"submit-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args))\n  }, \"提交選取欄位\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","type","onChange","_cache","args","$options","handleFileChange","_createCommentVNode","$data","columns","length","_hoisted_1","_hoisted_2","_Fragment","_renderList","column","key","selectedColumns","$event","_toDisplayString","class","onClick","_ctx","handleSubmit"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\UpdataVectorDB.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"handleFileChange\">\n      <!-- 呈現欄位名稱的表格 -->\n      <table v-if=\"columns.length\">\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th>Column Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"column in columns\" :key=\"column\">\n            <td><input type=\"checkbox\" v-model=\"selectedColumns[column]\"></td>\n            <td>{{ column }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <button class=\"submit-button\" @click=\"handleSubmit\" v-if=\"columns.length\">提交選取欄位</button>\n  </div>\n</template>\n<script>\n  import Papa from 'papaparse';\n  import * as XLSX from 'xlsx';\n  // import axios from 'axios';\n  // const web_api_url = 'http://127.0.0.1:5000';\n  export default {\n    data() {\n      return {\n        data: [],\n        columns: [],          // 用於儲存 CSV 中的欄位名稱\n        selectedColumns: {},  // 用於儲存欄位的勾選狀態\n        selectedColumnsArray:[],\n        uploadedFile: null,  // 存儲上傳文件\n\n      }\n    },\n    methods: {\n        handleFileChange(event) {\n        this.uploadedFile = event.target.files[0];\n        if (this.uploadedFile.name.includes('csv')) {\n          Papa.parse(this.uploadedFile, {\n            complete: (results) => {\n              this.data = results.data;\n              // console.log(\"this.data\", this.data); // assuming first row is header\n              this.columns = results.data[0];\n              // console.log(\"Column Names:\", this.columns); // assuming first row is header\n            }\n          });\n        }\n        else if (this.uploadedFile.name.includes('xl')) {\n          // console.log(\"file name\", this.uploadedFile); // assuming first row is header\n          const reader = new FileReader();\n          \n          reader.onload = (e) => {\n            const data = e.target.result;\n            const workbook = XLSX.read(data, { type: 'binary' });\n            \n            // Assuming first sheet and first row is header\n            const firstSheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[firstSheetName];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n            this.columns = jsonData[0]\n            // console.log(\"Column Names:\", this.columns);\n          };\n          reader.readAsBinaryString(this.uploadedFile);\n        }\n        else {\n            alert(\"請上傳CSV或Excel文件！\");\n        }\n      }\n    }\n\n  }\n</script>\n"],"mappings":";;;;gCAKQA,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAoB,YAAhB,aAAW,E;;;uBAPzBC,mBAAA,CAkBM,cAjBJD,mBAAA,CAA8C;IAAvCE,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC1CG,mBAAA,eAAkB,EACLC,KAAA,CAAAC,OAAO,CAACC,MAAM,I,cAA3BV,mBAAA,CAaQ,SAAAW,UAAA,GAZNC,UAKQ,EACRb,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKa,SAAA,QAAAC,WAAA,CAHgBN,KAAA,CAAAC,OAAO,EAAjBM,MAAM;yBAAjBf,mBAAA,CAGK;MAH0BgB,GAAG,EAAED;IAAM,IACxChB,mBAAA,CAAkE,a,gBAA9DA,mBAAA,CAAyD;MAAlDE,IAAI,EAAC,UAAU;uCAAUO,KAAA,CAAAS,eAAe,CAACF,MAAM,IAAAG;4DAAtBV,KAAA,CAAAS,eAAe,CAACF,MAAM,G,KAC1DhB,mBAAA,CAAqB,YAAAoB,gBAAA,CAAdJ,MAAM,iB;2EAIuCP,KAAA,CAAAC,OAAO,CAACC,MAAM,I,cAAxEV,mBAAA,CAAyF;;IAAjFoB,KAAK,EAAC,eAAe;IAAEC,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEkB,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAnB,IAAA,CAAY;KAAwB,QAAM,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}