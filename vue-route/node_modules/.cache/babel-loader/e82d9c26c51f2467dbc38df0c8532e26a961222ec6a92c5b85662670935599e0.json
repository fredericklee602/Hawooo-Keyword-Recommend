{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Select\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Vector DB Table Name\")])], -1 /* HOISTED */);\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.VBTables.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.VBTables, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => $data.VBselectedColumns[item] = $event\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelCheckbox, $data.VBselectedColumns[item]]])]), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.VBTables.length ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"submit-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.StartRecommend && _ctx.StartRecommend(...args))\n  }, \"選取VectorDB，推薦Keywords\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","$data","VBTables","length","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","item","key","type","VBselectedColumns","$event","_toDisplayString","class","onClick","_cache","args","_ctx","StartRecommend"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\KeywordRecommend.vue"],"sourcesContent":["<template>\r\n    <table  v-if=\"VBTables.length\">\r\n        <thead>\r\n            <tr>\r\n                <th>Select</th>\r\n                <th>Vector DB Table Name</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"item in VBTables\"  :key=\"item\">\r\n                <td><input type=\"checkbox\" v-model=\"VBselectedColumns[item]\"></td>\r\n                <td>{{ item }}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <button class=\"submit-button\" @click=\"StartRecommend\" v-if=\"VBTables.length\">選取VectorDB，推薦Keywords</button>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nexport default {\r\n    data() {\r\n        this.vectorDB_info();\r\n      return {\r\n        VBTables: { attributeName: 'array'  // 初始化屬性\r\n                    },\r\n        VBselectedColumns: {},\r\n        }\r\n    },\r\n    methods: {\r\n        async vectorDB_info() {\r\n        try{\r\n          this.isWatchData = false;\r\n          const response = await fetch(web_api_url+'/return_table_information/');\r\n          const data = await response.json();\r\n          this.VBTables = data[\"vectorDB_table_name\"];\r\n          // console.log(\"return_table_information:\", data[\"vectorDB_table_name\"]);\r\n        } \r\n        catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n/* 你可以加入些基本的樣式，讓表格看起來更整齊 */\r\n  table {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 10px;\r\n    width: 500px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  .loading-overlay {\r\n    position: fixed;   /* 全屏覆盖 */\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(255, 255, 255, 0.8);  /* 半透明的白色背景 */\r\n    display: flex;  /* 使用 Flexbox */\r\n    justify-content: center;  /* 水平居中 */\r\n    align-items: center;  /* 垂直居中 */\r\n    z-index: 1000;  /* 保證在最前面 */\r\n  }\r\n  \r\n  .loading-image {\r\n    max-width: 400px;  /* 或其他合適的大小 */\r\n    max-height: 400px;\r\n  }\r\n</style>"],"mappings":";;;;gCAEQA,mBAAA,CAKQ,gB,aAJJA,mBAAA,CAGK,a,aAFDA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAA6B,YAAzB,sBAAoB,E;;;6DAJtBC,KAAA,CAAAC,QAAQ,CAACC,MAAM,I,cAA7BC,mBAAA,CAaQ,SAAAC,UAAA,GAZJC,UAKQ,EACRN,mBAAA,CAKQ,iB,kBAJJI,mBAAA,CAGKG,SAAA,QAAAC,WAAA,CAHcP,KAAA,CAAAC,QAAQ,EAAhBO,IAAI;yBAAfL,mBAAA,CAGK;MAH0BM,GAAG,EAAED;IAAI,IACpCT,mBAAA,CAAkE,a,gBAA9DA,mBAAA,CAAyD;MAAlDW,IAAI,EAAC,UAAU;uCAAUV,KAAA,CAAAW,iBAAiB,CAACH,IAAI,IAAAI;4DAAtBZ,KAAA,CAAAW,iBAAiB,CAACH,IAAI,G,KAC1DT,mBAAA,CAAmB,YAAAc,gBAAA,CAAZL,IAAI,iB;2EAIqCR,KAAA,CAAAC,QAAQ,CAACC,MAAM,I,cAA3EC,mBAAA,CAA2G;;IAAnGW,KAAK,EAAC,eAAe;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,cAAA,IAAAD,IAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAyB,uBAAqB,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}