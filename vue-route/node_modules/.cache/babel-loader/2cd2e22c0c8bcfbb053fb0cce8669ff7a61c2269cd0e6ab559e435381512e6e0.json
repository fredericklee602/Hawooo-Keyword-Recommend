{"ast":null,"code":"import Papa from 'papaparse';\nimport * as XLSX from 'xlsx';\n// import axios from 'axios';\n// const web_api_url = 'http://127.0.0.1:5000';\nexport default {\n  data() {\n    return {\n      data: [],\n      columns: [],\n      // 用於儲存 CSV 中的欄位名稱\n      selectedColumns: {},\n      // 用於儲存欄位的勾選狀態\n      selectedColumnsArray: [],\n      uploadedFile: null // 存儲上傳文件\n    };\n  },\n\n  methods: {\n    handleFileChange(event) {\n      this.uploadedFile = event.target.files[0];\n      if (this.uploadedFile.name.includes('csv')) {\n        Papa.parse(this.uploadedFile, {\n          complete: results => {\n            this.data = results.data;\n            // console.log(\"this.data\", this.data); // assuming first row is header\n            this.columns = results.data[0];\n            // console.log(\"Column Names:\", this.columns); // assuming first row is header\n          }\n        });\n      } else if (this.uploadedFile.name.includes('xl')) {\n        // console.log(\"file name\", this.uploadedFile); // assuming first row is header\n        const reader = new FileReader();\n        reader.onload = e => {\n          const data = e.target.result;\n          const workbook = XLSX.read(data, {\n            type: 'binary'\n          });\n\n          // Assuming first sheet and first row is header\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n            header: 1\n          });\n          this.columns = jsonData[0];\n          // console.log(\"Column Names:\", this.columns);\n        };\n\n        reader.readAsBinaryString(this.uploadedFile);\n      } else {\n        alert(\"請上傳CSV或Excel文件！\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["Papa","XLSX","data","columns","selectedColumns","selectedColumnsArray","uploadedFile","methods","handleFileChange","event","target","files","name","includes","parse","complete","results","reader","FileReader","onload","e","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","readAsBinaryString","alert"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\UpdataVectorDB.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 第一部分 -->\n    <div v-if=\"isServerReturn==false\" class=\"First-Part\">\n      <input type=\"file\" @change=\"handleFileChange\">\n\n    </div>\n  </div>\n</template>\n<script>\n  import Papa from 'papaparse';\n  import * as XLSX from 'xlsx';\n  // import axios from 'axios';\n  // const web_api_url = 'http://127.0.0.1:5000';\n  export default {\n    data() {\n      return {\n        data: [],\n        columns: [],          // 用於儲存 CSV 中的欄位名稱\n        selectedColumns: {},  // 用於儲存欄位的勾選狀態\n        selectedColumnsArray:[],\n        uploadedFile: null,  // 存儲上傳文件\n\n      }\n    },\n    methods: {\n        handleFileChange(event) {\n        this.uploadedFile = event.target.files[0];\n        if (this.uploadedFile.name.includes('csv')) {\n          Papa.parse(this.uploadedFile, {\n            complete: (results) => {\n              this.data = results.data;\n              // console.log(\"this.data\", this.data); // assuming first row is header\n              this.columns = results.data[0];\n              // console.log(\"Column Names:\", this.columns); // assuming first row is header\n            }\n          });\n        }\n        else if (this.uploadedFile.name.includes('xl')) {\n          // console.log(\"file name\", this.uploadedFile); // assuming first row is header\n          const reader = new FileReader();\n          \n          reader.onload = (e) => {\n            const data = e.target.result;\n            const workbook = XLSX.read(data, { type: 'binary' });\n            \n            // Assuming first sheet and first row is header\n            const firstSheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[firstSheetName];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n            this.columns = jsonData[0]\n            // console.log(\"Column Names:\", this.columns);\n          };\n          reader.readAsBinaryString(this.uploadedFile);\n        }\n        else {\n            alert(\"請上傳CSV或Excel文件！\");\n        }\n      }\n    }\n\n  }\n</script>\n"],"mappings":"AAUE,OAAOA,IAAG,MAAO,WAAW;AAC5B,OAAO,KAAKC,IAAG,MAAO,MAAM;AAC5B;AACA;AACA,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLA,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MAAW;MACtBC,eAAe,EAAE,CAAC,CAAC;MAAG;MACtBC,oBAAoB,EAAC,EAAE;MACvBC,YAAY,EAAE,IAAI,CAAG;IAEvB;EACF,CAAC;;EACDC,OAAO,EAAE;IACLC,gBAAgBA,CAACC,KAAK,EAAE;MACxB,IAAI,CAACH,YAAW,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACzC,IAAI,IAAI,CAACL,YAAY,CAACM,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC1Cb,IAAI,CAACc,KAAK,CAAC,IAAI,CAACR,YAAY,EAAE;UAC5BS,QAAQ,EAAGC,OAAO,IAAK;YACrB,IAAI,CAACd,IAAG,GAAIc,OAAO,CAACd,IAAI;YACxB;YACA,IAAI,CAACC,OAAM,GAAIa,OAAO,CAACd,IAAI,CAAC,CAAC,CAAC;YAC9B;UACF;QACF,CAAC,CAAC;MACJ,OACK,IAAI,IAAI,CAACI,YAAY,CAACM,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC9C;QACA,MAAMI,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAE/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,MAAMlB,IAAG,GAAIkB,CAAC,CAACV,MAAM,CAACW,MAAM;UAC5B,MAAMC,QAAO,GAAIrB,IAAI,CAACsB,IAAI,CAACrB,IAAI,EAAE;YAAEsB,IAAI,EAAE;UAAS,CAAC,CAAC;;UAEpD;UACA,MAAMC,cAAa,GAAIH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;UAC7C,MAAMC,SAAQ,GAAIL,QAAQ,CAACM,MAAM,CAACH,cAAc,CAAC;UACjD,MAAMI,QAAO,GAAI5B,IAAI,CAAC6B,KAAK,CAACC,aAAa,CAACJ,SAAS,EAAE;YAAEK,MAAM,EAAE;UAAE,CAAC,CAAC;UACnE,IAAI,CAAC7B,OAAM,GAAI0B,QAAQ,CAAC,CAAC;UACzB;QACF,CAAC;;QACDZ,MAAM,CAACgB,kBAAkB,CAAC,IAAI,CAAC3B,YAAY,CAAC;MAC9C,OACK;QACD4B,KAAK,CAAC,iBAAiB,CAAC;MAC5B;IACF;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}