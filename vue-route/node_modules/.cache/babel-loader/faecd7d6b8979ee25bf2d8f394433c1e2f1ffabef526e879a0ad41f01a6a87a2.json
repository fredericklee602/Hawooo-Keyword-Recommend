{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RecommendationKeywords = _resolveComponent(\"RecommendationKeywords\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedKeywords[$data.currentPage], keyword => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: keyword\n    }, [_createElementVNode(\"td\", {\n      onClick: $event => $options.showRecommendations(keyword)\n    }, _toDisplayString(keyword), 9 /* TEXT, PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevPage && $options.prevPage(...args))\n  }, \"上一頁\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.inputPage = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.goToPage && $options.goToPage(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.inputPage, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.nextPage && $options.nextPage(...args))\n  }, \"下一頁\")]), $data.showRecommendationsTable ? (_openBlock(), _createBlock(_component_RecommendationKeywords, {\n    key: 0,\n    keyword: $data.selectedKeyword\n  }, null, 8 /* PROPS */, [\"keyword\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$options","paginatedKeywords","$data","currentPage","keyword","key","onClick","$event","showRecommendations","_hoisted_1","_cache","args","prevPage","type","_ctx","inputPage","onChange","goToPage","nextPage","showRecommendationsTable","_createBlock","_component_RecommendationKeywords","selectedKeyword"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"keyword in paginatedKeywords[currentPage]\" :key=\"keyword\">\r\n            <td @click=\"showRecommendations(keyword)\">{{ keyword }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button @click=\"prevPage\">上一頁</button>\r\n        <input type=\"number\" v-model.number=\"inputPage\" @change=\"goToPage\" />\r\n        <button @click=\"nextPage\">下一頁</button>\r\n      </div>\r\n\r\n      <RecommendationKeywords v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// const web_api_url = 'http://127.0.0.1:5000';\r\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\r\nexport default {\r\n    components: {\r\n      RecommendationKeywords\r\n    },\r\n    data() {\r\n      return {\r\n        keywords: Array.from({ length: 1000 }, (_, i) => `Keyword ${i+1}`),\r\n        currentPage: 0,\r\n        selectedKeyword: '',\r\n        showRecommendationsTable: false\r\n      }\r\n    },\r\n    computed: {\r\n      paginatedKeywords() {\r\n        let pageSize = 20;\r\n        return Array.from({ length: Math.ceil(this.keywords.length / pageSize) }, (_, i) =>\r\n          this.keywords.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      totalPages() {\r\n        return this.paginatedKeywords.length;\r\n      }\r\n    },\r\n    methods: {\r\n      showRecommendations(keyword) {\r\n        this.selectedKeyword = keyword;\r\n        this.showRecommendationsTable = true;\r\n      },\r\n        prevPage() {\r\n        if (this.currentPage > 0) {\r\n            this.currentPage--;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        nextPage() {\r\n        if (this.currentPage < this.totalPages - 1) {\r\n            this.currentPage++;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        goToPage() {\r\n        if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\r\n            this.currentPage = this.inputPage - 1; // Adjust for 0-based index\r\n        }\r\n        },\r\n    }\r\n}\r\n</script>"],"mappings":";;;;uBACIA,mBAAA,CAeM,cAdJC,mBAAA,CAMQ,gBALNA,mBAAA,CAIQ,iB,kBAHND,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFiBC,QAAA,CAAAC,iBAAiB,CAACC,KAAA,CAAAC,WAAW,GAAxCC,OAAO;yBAAlBR,mBAAA,CAEK;MAFkDS,GAAG,EAAED;IAAO,IACjEP,mBAAA,CAA4D;MAAvDS,OAAK,EAAAC,MAAA,IAAEP,QAAA,CAAAQ,mBAAmB,CAACJ,OAAO;wBAAMA,OAAO,wBAAAK,UAAA,E;sCAI1DZ,mBAAA,CAIM,cAHJA,mBAAA,CAAsC;IAA7BS,OAAK,EAAAI,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEX,QAAA,CAAAY,QAAA,IAAAZ,QAAA,CAAAY,QAAA,IAAAD,IAAA,CAAQ;KAAE,KAAG,G,gBAC7Bd,mBAAA,CAAqE;IAA9DgB,IAAI,EAAC,QAAQ;+DAAiBC,IAAA,CAAAC,SAAS,GAAAR,MAAA;IAAGS,QAAM,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEX,QAAA,CAAAiB,QAAA,IAAAjB,QAAA,CAAAiB,QAAA,IAAAN,IAAA,CAAQ;iEAA5BG,IAAA,CAAAC,SAAS,E;YAAzB;EAA0B,E,IAC/ClB,mBAAA,CAAsC;IAA7BS,OAAK,EAAAI,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEX,QAAA,CAAAkB,QAAA,IAAAlB,QAAA,CAAAkB,QAAA,IAAAP,IAAA,CAAQ;KAAE,KAAG,E,GAGDT,KAAA,CAAAiB,wBAAwB,I,cAAtDC,YAAA,CAAqFC,iCAAA;;IAA5BjB,OAAO,EAAEF,KAAA,CAAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}