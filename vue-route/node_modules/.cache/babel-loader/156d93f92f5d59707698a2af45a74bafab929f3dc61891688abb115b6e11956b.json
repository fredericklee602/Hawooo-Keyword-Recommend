{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Select\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Vector DB Table Name\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RecommendationKeywords = _resolveComponent(\"RecommendationKeywords\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.keywords, keyword => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: keyword\n    }, [_createElementVNode(\"td\", {\n      onClick: $event => _ctx.showRecommendations(keyword)\n    }, _toDisplayString(keyword), 9 /* TEXT, PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _ctx.showRecommendationsTable ? (_openBlock(), _createBlock(_component_RecommendationKeywords, {\n    key: 0,\n    keyword: _ctx.selectedKeyword\n  }, null, 8 /* PROPS */, [\"keyword\"])) : _createCommentVNode(\"v-if\", true), !$data.start_recommned ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$data.VBTables.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.VBTables, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => $data.VBselectedColumns[item] = $event\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelCheckbox, $data.VBselectedColumns[item]]])]), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.VBTables.length ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"submit-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.StartRecommend && $options.StartRecommend(...args))\n  }, \"選取VectorDB，推薦Keywords\")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $data.start_recommned ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (msg, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"searchMessages\",\n      key: index\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([msg.type, 'boxed'])\n    }, _toDisplayString(msg.content), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userMessage = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.userMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_renderList","_ctx","keywords","keyword","key","onClick","$event","showRecommendations","_hoisted_1","showRecommendationsTable","_createBlock","_component_RecommendationKeywords","selectedKeyword","$data","start_recommned","_hoisted_2","VBTables","length","_hoisted_3","_hoisted_4","item","type","VBselectedColumns","_toDisplayString","class","_cache","args","$options","StartRecommend","_hoisted_6","messages","msg","index","_normalizeClass","content","userMessage","onKeyup","_withKeys","sendMessage"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\KeywordRecommend.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"keyword in keywords\" :key=\"keyword\">\r\n            <td @click=\"showRecommendations(keyword)\">{{ keyword }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <RecommendationKeywords v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" />\r\n \r\n      <div v-if=\"!start_recommned\">\r\n          <table  v-if=\"VBTables.length\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Select</th>\r\n                      <th>Vector DB Table Name</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr v-for=\"item in VBTables\"  :key=\"item\">\r\n                      <td><input type=\"checkbox\" v-model=\"VBselectedColumns[item]\"></td>\r\n                      <td>{{ item }}</td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n          <button class=\"submit-button\" @click=\"StartRecommend\" v-if=\"VBTables.length\">選取VectorDB，推薦Keywords</button>\r\n      </div>\r\n        <div v-if=\"start_recommned\">\r\n          <div class=\"searchMessages\" v-for=\"(msg, index) in messages\" :key=\"index\">\r\n            <div :class=\"[msg.type, 'boxed']\">{{ msg.content }}</div>\r\n          </div>\r\n          <input type=\"text\" v-model=\"userMessage\" @keyup.enter=\"sendMessage\">\r\n          <button @click=\"sendMessage\">Send</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nexport default {\r\n    data() {\r\n        this.vectorDB_info();\r\n      return {\r\n        VBTables: { attributeName: 'array'  // 初始化屬性\r\n                    },\r\n        VBselectedColumns: {},\r\n        userMessage: \"\",\r\n        messages: [],\r\n        start_recommned : false\r\n        }\r\n    },\r\n    methods: {\r\n        async vectorDB_info() {\r\n        try{\r\n          this.isWatchData = false;\r\n          const response = await fetch(web_api_url+'/return_table_information/');\r\n          const data = await response.json();\r\n          this.VBTables = data[\"vectorDB_table_name\"];\r\n          // console.log(\"return_table_information:\", data[\"vectorDB_table_name\"]);\r\n        } \r\n        catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }\r\n      },async StartRecommend() {\r\n        this.VBselectedColumnsArray = Object.keys(this.VBselectedColumns).filter(column => this.VBselectedColumns[column]);\r\n        if (this.VBselectedColumnsArray.length != 1) {\r\n          alert(\"請選擇1個欄位!\");\r\n          return;\r\n        }\r\n        try{\r\n          this.start_recommned = true;\r\n        } \r\n        catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }\r\n      },async sendMessage() {\r\n        this.messages = []\r\n        this.messages.push({ type: \"user\", content: this.userMessage });\r\n\r\n        const response = await fetch(web_api_url+\"/recommend_keywords/\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ message: this.userMessage,'class':this.VBselectedColumnsArray }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        this.messages.push({ type: \"bot\", content: data.reply });\r\n        this.userMessage = \"\";\r\n      },async StartUpdateVDB(){\r\n        this.VBselectedColumnsArray = Object.keys(this.VBselectedColumns).filter(column => this.VBselectedColumns[column]);\r\n        // console.log(\"VBselectedColumnsArray\", this.VBselectedColumnsArray);\r\n  \r\n        if (this.VBselectedColumnsArray.length != 1) {\r\n          alert(\"請選擇1個欄位!\");\r\n          return;\r\n        }\r\n\r\n        // 使用FormData來上傳文件和列名\r\n        const formData = new FormData();\r\n        formData.append('VBTable_name', this.VBselectedColumnsArray);\r\n        // console.log(\"formData\", formData);\r\n        try{\r\n          const response = await fetch(web_api_url+'/update_vector_DB/', { // 替換為你的服務器端點\r\n            method: 'POST',\r\n            body: formData\r\n          });\r\n          const data = await response.json();\r\n          console.log(\"Start Update vector DB:\", data);\r\n        } \r\n        catch (error) {\r\n          console.error(\"Error loading data:\", error);\r\n        }\r\n      }\r\n      // sendMessage() {\r\n      //   if (this.newMessage.trim() !== '') {\r\n      //     this.messages.push({\r\n      //       id: this.lastMessageId++,\r\n      //       text: this.newMessage.trim()\r\n      //     });\r\n      //     this.newMessage = '';\r\n      //   }\r\n      // }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n/* 你可以加入些基本的樣式，讓表格看起來更整齊 */\r\n  table {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 10px;\r\n    width: 500px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  .loading-overlay {\r\n    position: fixed;   /* 全屏覆盖 */\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(255, 255, 255, 0.8);  /* 半透明的白色背景 */\r\n    display: flex;  /* 使用 Flexbox */\r\n    justify-content: center;  /* 水平居中 */\r\n    align-items: center;  /* 垂直居中 */\r\n    z-index: 1000;  /* 保證在最前面 */\r\n  }\r\n  \r\n  .loading-image {\r\n    max-width: 400px;  /* 或其他合適的大小 */\r\n    max-height: 400px;\r\n  }\r\n  .user {\r\n  color: blue;\r\n  }\r\n  .bot {\r\n    color: green;\r\n  }\r\n  .chat-room {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n  }\r\n\r\n  .messages {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .input-area {\r\n    display: flex;\r\n    padding: 1rem;\r\n  }\r\n\r\n  input {\r\n    flex: 1;\r\n    padding: 0.5rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  button {\r\n    padding: 0.5rem 1rem;\r\n    margin-top: 50px;\r\n    margin-bottom: 50px;\r\n  }\r\n  .searchMessages{\r\n    margin-top: 50px;\r\n    margin-bottom: 50px;\r\n  }\r\n  .boxed {\r\n    width: 30%;  /* 或者你可以设置为其他宽度值，例如 200px */\r\n    border: 1px solid #ccc;  /* 灰色边框 */\r\n    padding: 10px;\r\n    background-color: white;  /* 白色背景 */\r\n    border-radius: 4px;\r\n    margin-bottom: 10px;\r\n    box-sizing: border-box;  /* 这确保宽度包括内边距和边框 */\r\n    /* ... 其他样式 ... */\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n</style>"],"mappings":";;;;;;;;gCAccA,mBAAA,CAKQ,gB,aAJJA,mBAAA,CAGK,a,aAFDA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAA6B,YAAzB,sBAAoB,E;;;;;;;uBAhB1CC,mBAAA,CAmCM,cAlCJD,mBAAA,CAMQ,gBALNA,mBAAA,CAIQ,iB,kBAHNC,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAFiBC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBL,mBAAA,CAEK;MAF4BM,GAAG,EAAED;IAAO,IAC3CN,mBAAA,CAA4D;MAAvDQ,OAAK,EAAAC,MAAA,IAAEL,IAAA,CAAAM,mBAAmB,CAACJ,OAAO;wBAAMA,OAAO,wBAAAK,UAAA,E;sCAK5BP,IAAA,CAAAQ,wBAAwB,I,cAAtDC,YAAA,CAAqFC,iCAAA;;IAA5BR,OAAO,EAAEF,IAAA,CAAAW;8EAEtDC,KAAA,CAAAC,eAAe,I,cAA3BhB,mBAAA,CAgBM,OAAAiB,UAAA,GAfYF,KAAA,CAAAG,QAAQ,CAACC,MAAM,I,cAA7BnB,mBAAA,CAaQ,SAAAoB,UAAA,GAZJC,UAKQ,EACRtB,mBAAA,CAKQ,iB,kBAJJC,mBAAA,CAGKC,SAAA,QAAAC,WAAA,CAHca,KAAA,CAAAG,QAAQ,EAAhBI,IAAI;yBAAftB,mBAAA,CAGK;MAH0BM,GAAG,EAAEgB;IAAI,IACpCvB,mBAAA,CAAkE,a,gBAA9DA,mBAAA,CAAyD;MAAlDwB,IAAI,EAAC,UAAU;uCAAUR,KAAA,CAAAS,iBAAiB,CAACF,IAAI,IAAAd;4DAAtBO,KAAA,CAAAS,iBAAiB,CAACF,IAAI,G,KAC1DvB,mBAAA,CAAmB,YAAA0B,gBAAA,CAAZH,IAAI,iB;2EAIqCP,KAAA,CAAAG,QAAQ,CAACC,MAAM,I,cAA3EnB,mBAAA,CAA2G;;IAAnG0B,KAAK,EAAC,eAAe;IAAEnB,OAAK,EAAAoB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAyB,uBAAqB,K,0EAEzFb,KAAA,CAAAC,eAAe,I,cAA1BhB,mBAAA,CAMM,OAAA+B,UAAA,I,kBALJ/B,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAF6Ca,KAAA,CAAAiB,QAAQ,GAAvBC,GAAG,EAAEC,KAAK;yBAA9ClC,mBAAA,CAEM;MAFD0B,KAAK,EAAC,gBAAgB;MAAmCpB,GAAG,EAAE4B;QACjEnC,mBAAA,CAAyD;MAAnD2B,KAAK,EAAAS,eAAA,EAAGF,GAAG,CAACV,IAAI;wBAAeU,GAAG,CAACG,OAAO,wB;kDAElDrC,mBAAA,CAAoE;IAA7DwB,IAAI,EAAC,MAAM;+DAAUR,KAAA,CAAAsB,WAAW,GAAA7B,MAAA;IAAG8B,OAAK,EAAAX,MAAA,QAAAA,MAAA,MAAAY,SAAA,KAAAX,IAAA,KAAQC,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAZ,IAAA,CAAW;iEAAtCb,KAAA,CAAAsB,WAAW,E,GACvCtC,mBAAA,CAA0C;IAAjCQ,OAAK,EAAAoB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAZ,IAAA,CAAW;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}