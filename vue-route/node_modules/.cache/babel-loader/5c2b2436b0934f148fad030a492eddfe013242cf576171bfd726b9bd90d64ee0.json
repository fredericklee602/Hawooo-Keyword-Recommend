{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-05f64c9e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"pipline\"\n};\nconst _hoisted_2 = {\n  class: \"piplinestep\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Step1：點擊關鍵字\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"piplinestep\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Step2：選取多個同義詞，並提交同義詞庫\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"piplinestep\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Step3：同義詞庫\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RecommendationKeywords = _resolveComponent(\"RecommendationKeywords\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedKeywords[$data.currentPage], keyword => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: keyword\n    }, [_createElementVNode(\"td\", null, _toDisplayString(keyword.index), 1 /* TEXT */), _createElementVNode(\"td\", {\n      onClick: $event => $options.showRecommendations(keyword.Keywords)\n    }, _toDisplayString(keyword.Keywords), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevPage && $options.prevPage(...args))\n  }, \"上一頁\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.inputPage = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.goToPage && $options.goToPage(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.inputPage, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.nextPage && $options.nextPage(...args))\n  }, \"下一頁\")])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, $data.showRecommendationsTable ? (_openBlock(), _createBlock(_component_RecommendationKeywords, {\n    key: 0,\n    keyword: $data.selectedKeyword,\n    recommendKeywords_list: $data.recommendKeywords_list\n  }, null, 8 /* PROPS */, [\"keyword\", \"recommendKeywords_list\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.synonyms_list, synonyms => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: synonyms\n    }, [_createElementVNode(\"td\", null, _toDisplayString(synonyms.keyword), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(synonyms.similarity_keywords), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","paginatedKeywords","$data","currentPage","keyword","key","_toDisplayString","index","onClick","$event","showRecommendations","Keywords","_hoisted_4","_cache","args","prevPage","type","_ctx","inputPage","onChange","goToPage","nextPage","_hoisted_5","_hoisted_6","showRecommendationsTable","_createBlock","_component_RecommendationKeywords","selectedKeyword","recommendKeywords_list","_hoisted_7","_hoisted_8","synonyms_list","synonyms","similarity_keywords"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue"],"sourcesContent":["<template>\r\n    <div class=\"pipline\">\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step1：點擊關鍵字</h3>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"keyword in paginatedKeywords[currentPage]\" :key=\"keyword\">\r\n            <td >{{ keyword.index }}</td>\r\n            <td @click=\"showRecommendations(keyword.Keywords)\">{{ keyword.Keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button @click=\"prevPage\">上一頁</button>\r\n        <input type=\"number\" v-model.number=\"inputPage\" @change=\"goToPage\" />\r\n        <button @click=\"nextPage\">下一頁</button>\r\n      </div>\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step2：選取多個同義詞，並提交同義詞庫</h3>\r\n      <RecommendationKeywords v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" :recommendKeywords_list=\"recommendKeywords_list\" />\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step3：同義詞庫</h3>\r\n     <table>\r\n        <tbody>\r\n          <tr v-for=\"synonyms in synonyms_list\" :key=\"synonyms\">\r\n            <td >{{ synonyms.keyword }}</td>\r\n            <td >{{ synonyms.similarity_keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n     </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\r\nexport default {\r\n    components: {\r\n      RecommendationKeywords\r\n    },\r\n    data() {\r\n    this.KeywordsData(),\r\n    this.synonymsData()\r\n      return {\r\n        keywords: [],\r\n        currentPage: 0,\r\n        selectedKeyword: '',\r\n        showRecommendationsTable: false,\r\n        recommendKeywords_list: [],\r\n        synonyms_list:[]\r\n      }\r\n    },\r\n    computed: {\r\n      paginatedKeywords() {\r\n        let pageSize = 10;\r\n        return Array.from({ length: Math.ceil(this.keywords.length / pageSize) }, (_, i) =>\r\n          this.keywords.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      totalPages() {\r\n        return this.paginatedKeywords.length;\r\n      }\r\n    },\r\n    methods: {\r\n        async showRecommendations(keyword) {\r\n            this.selectedKeyword = keyword;\r\n            this.showRecommendationsTable = true;\r\n            const formData = new FormData();\r\n            formData.append('message', this.keyword);\r\n            formData.append('class', [\"Hawoo_Keywords\"]);\r\n            const response = await fetch(web_api_url+'/recommend_keywords_list/', { // 替換為你的服務器端點\r\n            method: 'POST',\r\n            body: formData\r\n            });\r\n\r\n            const data = await response.json();\r\n            this.recommendKeywords_list = data.reply\r\n        },\r\n        prevPage() {\r\n        if (this.currentPage > 0) {\r\n            this.currentPage--;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        nextPage() {\r\n        if (this.currentPage < this.totalPages - 1) {\r\n            this.currentPage++;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        goToPage() {\r\n        if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\r\n            this.currentPage = this.inputPage - 1; // Adjust for 0-based index\r\n        }\r\n        },async KeywordsData() {\r\n        try {\r\n        const response = await fetch(web_api_url+'/return_keywords_data/');\r\n        // console.log(\"response\", response);\r\n        const data = await response.json();\r\n\r\n        // 假設API返回的是一个標準的JSON格式的DataFrame\r\n        this.keywords = data.dataframe;\r\n\r\n        } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        }        \r\n      },async synonymsData() {\r\n        try {\r\n        const response = await fetch(web_api_url+'/synonyms_base/');\r\n        // console.log(\"response\", response);\r\n        const data = await response.json();\r\n        console.log(\"data\",data)\r\n\r\n        // 假設API返回的是一个標準的JSON格式的DataFrame\r\n        this.synonyms_list = data.dataframe;\r\n\r\n        } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        }        \r\n      }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.pipline {\r\n    display: flex;\r\n    border: 2px solid rgb(112, 68, 208);\r\n    border-radius: 10px;\r\n}\r\n.piplinestep {\r\n    margin-left: 50px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 50px; /* 調整數值以獲得所需的間距 */\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAS;;EACdA,KAAK,EAAC;AAAa;gEACxBC,mBAAA,CAAqB,YAAhB,aAAW;;;EAeXD,KAAK,EAAC;AAAa;gEACxBC,mBAAA,CAA+B,YAA1B,uBAAqB;;EAGrBD,KAAK,EAAC;AAAa;gEACxBC,mBAAA,CAAoB,YAAf,YAAU;;;;uBAtBhBC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BLF,mBAAA,CAeM,OAfNG,UAeM,GAdNC,UAAqB,EACpBJ,mBAAA,CAOQ,gBANNA,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKI,SAAA,QAAAC,WAAA,CAHiBC,QAAA,CAAAC,iBAAiB,CAACC,KAAA,CAAAC,WAAW,GAAxCC,OAAO;yBAAlBV,mBAAA,CAGK;MAHkDW,GAAG,EAAED;IAAO,IACjEX,mBAAA,CAA6B,YAAAa,gBAAA,CAArBF,OAAO,CAACG,KAAK,kBACrBd,mBAAA,CAA8E;MAAzEe,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAU,mBAAmB,CAACN,OAAO,CAACO,QAAQ;wBAAMP,OAAO,CAACO,QAAQ,wBAAAC,UAAA,E;sCAI5EnB,mBAAA,CAIM,cAHJA,mBAAA,CAAsC;IAA7Be,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAe,QAAA,IAAAf,QAAA,CAAAe,QAAA,IAAAD,IAAA,CAAQ;KAAE,KAAG,G,gBAC7BrB,mBAAA,CAAqE;IAA9DuB,IAAI,EAAC,QAAQ;+DAAiBC,IAAA,CAAAC,SAAS,GAAAT,MAAA;IAAGU,QAAM,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAoB,QAAA,IAAApB,QAAA,CAAAoB,QAAA,IAAAN,IAAA,CAAQ;iEAA5BG,IAAA,CAAAC,SAAS,E;YAAzB;EAA0B,E,IAC/CzB,mBAAA,CAAsC;IAA7Be,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAqB,QAAA,IAAArB,QAAA,CAAAqB,QAAA,IAAAP,IAAA,CAAQ;KAAE,KAAG,E,KAGhCrB,mBAAA,CAGM,OAHN6B,UAGM,GAFNC,UAA+B,EACArB,KAAA,CAAAsB,wBAAwB,I,cAAtDC,YAAA,CAAsIC,iCAAA;;IAA7EtB,OAAO,EAAEF,KAAA,CAAAyB,eAAe;IAAGC,sBAAsB,EAAE1B,KAAA,CAAA0B;yGAE7GnC,mBAAA,CAUM,OAVNoC,UAUM,GATNC,UAAoB,EACpBrC,mBAAA,CAOS,gBANNA,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKI,SAAA,QAAAC,WAAA,CAHkBG,KAAA,CAAA6B,aAAa,EAAzBC,QAAQ;yBAAnBtC,mBAAA,CAGK;MAHkCW,GAAG,EAAE2B;IAAQ,IAClDvC,mBAAA,CAAgC,YAAAa,gBAAA,CAAxB0B,QAAQ,CAAC5B,OAAO,kBACxBX,mBAAA,CAA4C,YAAAa,gBAAA,CAApC0B,QAAQ,CAACC,mBAAmB,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}