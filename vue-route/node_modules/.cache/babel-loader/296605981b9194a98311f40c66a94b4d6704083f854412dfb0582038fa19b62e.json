{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-05f64c9e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"pipline\"\n};\nconst _hoisted_2 = {\n  class: \"piplinestep\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Step1：輸入或點擊關鍵字\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"piplinestep\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Step2：選取多個同義詞，並提交同義詞庫\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"piplinestep\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Step3：同義詞庫\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"關鍵字\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"同義詞\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RecommendationKeywords = _resolveComponent(\"RecommendationKeywords\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event),\n    placeholder: \"Enter text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.sendToBackend && _ctx.sendToBackend(...args))\n  }, \"Send\")]), _createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedKeywords[$data.currentPage], keyword => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: keyword\n    }, [_createElementVNode(\"td\", null, _toDisplayString(keyword.index), 1 /* TEXT */), _createElementVNode(\"td\", {\n      onClick: $event => $options.showRecommendations(keyword.Keywords)\n    }, _toDisplayString(keyword.Keywords), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.prevPage && $options.prevPage(...args))\n  }, \"上一頁\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.inputPage = $event),\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.goToPage && $options.goToPage(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.inputPage, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.nextPage && $options.nextPage(...args))\n  }, \"下一頁\")])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, $data.showRecommendationsTable ? (_openBlock(), _createBlock(_component_RecommendationKeywords, {\n    key: 0,\n    keyword: $data.selectedKeyword,\n    recommendKeywords_list: $data.recommendKeywords_list\n  }, null, 8 /* PROPS */, [\"keyword\", \"recommendKeywords_list\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"table\", null, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.synonyms_list, synonyms => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: synonyms\n    }, [_createElementVNode(\"td\", null, _toDisplayString(synonyms.keyword), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(synonyms.similarity_keywords), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    class: \"submit-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.synonymsData && $options.synonymsData(...args))\n  }, \"更新顯示同義詞庫\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_ctx","text","$event","placeholder","onClick","_cache","args","sendToBackend","_Fragment","_renderList","$options","paginatedKeywords","$data","currentPage","keyword","key","_toDisplayString","index","showRecommendations","Keywords","_hoisted_4","prevPage","type","inputPage","onChange","goToPage","nextPage","_hoisted_5","_hoisted_6","showRecommendationsTable","_createBlock","_component_RecommendationKeywords","selectedKeyword","recommendKeywords_list","_hoisted_7","_hoisted_8","_hoisted_9","synonyms_list","synonyms","similarity_keywords","synonymsData"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\views\\AddNewThesaurus.vue"],"sourcesContent":["<template>\r\n    <div class=\"pipline\">\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step1：輸入或點擊關鍵字</h3>\r\n      <div>\r\n        <input v-model=\"text\" placeholder=\"Enter text\" />\r\n        <button @click=\"sendToBackend\">Send</button>\r\n      </div>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"keyword in paginatedKeywords[currentPage]\" :key=\"keyword\">\r\n            <td >{{ keyword.index }}</td>\r\n            <td @click=\"showRecommendations(keyword.Keywords)\">{{ keyword.Keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button @click=\"prevPage\">上一頁</button>\r\n        <input type=\"number\" v-model.number=\"inputPage\" @change=\"goToPage\" />\r\n        <button @click=\"nextPage\">下一頁</button>\r\n      </div>\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step2：選取多個同義詞，並提交同義詞庫</h3>\r\n      <RecommendationKeywords v-if=\"showRecommendationsTable\" :keyword=\"selectedKeyword\" :recommendKeywords_list=\"recommendKeywords_list\" />\r\n     </div>\r\n     <div class=\"piplinestep\">\r\n     <h3 >Step3：同義詞庫</h3>\r\n     <table>\r\n        <thead>\r\n            <tr>\r\n                <th>關鍵字</th>\r\n                <th>同義詞</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"synonyms in synonyms_list\" :key=\"synonyms\">\r\n            <td >{{ synonyms.keyword }}</td>\r\n            <td >{{ synonyms.similarity_keywords }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button class=\"submit-button\" @click=\"synonymsData\" >更新顯示同義詞庫</button>\r\n     </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst web_api_url = 'http://127.0.0.1:5000';\r\nimport RecommendationKeywords from '@/components/RecommendationKeywords.vue';\r\nexport default {\r\n    components: {\r\n      RecommendationKeywords\r\n    },\r\n    data() {\r\n    this.KeywordsData(),\r\n    this.synonymsData()\r\n      return {\r\n        keywords: [],\r\n        currentPage: 0,\r\n        selectedKeyword: '',\r\n        showRecommendationsTable: false,\r\n        recommendKeywords_list: [],\r\n        synonyms_list:[]\r\n      }\r\n    },\r\n    computed: {\r\n      paginatedKeywords() {\r\n        let pageSize = 10;\r\n        return Array.from({ length: Math.ceil(this.keywords.length / pageSize) }, (_, i) =>\r\n          this.keywords.slice(i * pageSize, i * pageSize + pageSize)\r\n        );\r\n      },\r\n      totalPages() {\r\n        return this.paginatedKeywords.length;\r\n      }\r\n    },\r\n    methods: {\r\n        async showRecommendations(keyword) {\r\n            this.selectedKeyword = keyword;\r\n            this.showRecommendationsTable = true;\r\n            const formData = new FormData();\r\n            formData.append('message', this.selectedKeyword);\r\n            formData.append('class', [\"Hawoo_Keywords\"]);\r\n            console.log(\"formData\",formData)\r\n            const response = await fetch(web_api_url+'/recommend_keywords_list/', { // 替換為你的服務器端點\r\n            method: 'POST',\r\n            body: formData\r\n            });\r\n\r\n            const data = await response.json();\r\n            this.recommendKeywords_list = data.reply\r\n        },\r\n        prevPage() {\r\n        if (this.currentPage > 0) {\r\n            this.currentPage--;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        nextPage() {\r\n        if (this.currentPage < this.totalPages - 1) {\r\n            this.currentPage++;\r\n            this.inputPage = this.currentPage + 1; // Adjust for user understanding\r\n        }\r\n        },\r\n        goToPage() {\r\n        if (this.inputPage > 0 && this.inputPage <= this.totalPages) {\r\n            this.currentPage = this.inputPage - 1; // Adjust for 0-based index\r\n        }\r\n        },async KeywordsData() {\r\n        try {\r\n        const response = await fetch(web_api_url+'/return_keywords_data_all/');\r\n        const data = await response.json();\r\n\r\n        // 假設API返回的是一个標準的JSON格式的DataFrame\r\n        this.keywords = data.dataframe;\r\n\r\n        } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        }        \r\n      },async synonymsData() {\r\n        try {\r\n        const response = await fetch(web_api_url+'/synonyms_base/');\r\n        const data = await response.json();\r\n        console.log(\"data\",data)\r\n\r\n        // 假設API返回的是一个標準的JSON格式的DataFrame\r\n        this.synonyms_list = data.dataframe;\r\n\r\n        } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        }        \r\n      }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.pipline {\r\n    display: flex;\r\n    border-radius: 10px;\r\n    margin-left: 20px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 20px; /* 調整數值以獲得所需的間距 */\r\n}\r\n.piplinestep {\r\n    margin-left: 50px; /* 調整數值以獲得所需的間距 */\r\n    margin-right: 50px; /* 調整數值以獲得所需的間距 */\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}