{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h3\", null, \"Recommendations for \" + _toDisplayString($props.keyword), 1 /* TEXT */), _createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.recommendations, recommended => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: recommended\n    }, [_createElementVNode(\"td\", null, _toDisplayString(recommended), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","keyword","_Fragment","_renderList","$options","recommendations","recommended","key"],"sources":["E:\\Fred\\AI_UI\\vue_route\\vue-route\\src\\components\\RecommendationKeywords.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Recommendations for {{ keyword }}</h3>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"recommended in recommendations\" :key=\"recommended\">\r\n            <td>{{ recommended }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  const web_api_url = 'http://127.0.0.1:5000';\r\n  export default {\r\n    data(){\r\n    },\r\n    props: {\r\n      keyword: String\r\n    },\r\n    computed: {\r\n      async recommendations() {\r\n        // Here you can implement logic to provide keyword recommendations based on the selected keyword.\r\n        // For simplicity, I'm returning a dummy array.\r\n        // return [`${this.keyword} 1`, `${this.keyword} 2`, `${this.keyword} 3`];\r\n        const recommend_keywords_list = await this.recommend_keywords();\r\n        return recommend_keywords_list\r\n      }\r\n    },\r\n    methods:{\r\n        async recommend_keywords() {\r\n            const response = await fetch(web_api_url+\"/recommend_keywords_list/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ message: this.keyword,'class':[\"Hawoo_Keywords\"]}),\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log(data.reply)\r\n            return data.reply\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CASM,cARJC,mBAAA,CAA0C,YAAtC,sBAAoB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,OAAO,kBAClCH,mBAAA,CAMQ,gBALNA,mBAAA,CAIQ,iB,kBAHND,mBAAA,CAEKK,SAAA,QAAAC,WAAA,CAFqBC,QAAA,CAAAC,eAAe,EAA9BC,WAAW;yBAAtBT,mBAAA,CAEK;MAFuCU,GAAG,EAAED;IAAW,IAC1DR,mBAAA,CAA0B,YAAAC,gBAAA,CAAnBO,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}